//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Water_ps14_none_none_none_none_0_rangefog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Water_ps14_none_none_none_none_0_rangefog[] =
{
    0xfffe0101, 0x0072fffe, 0x47554244, 0x00000028, 0x000001ac, 0x00000000, 
    0x00000001, 0x000000b0, 0x0000001f, 0x000000b4, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7461575f, 
    0x705f7265, 0x5f343173, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 0x6e5f656e, 
    0x5f656e6f, 0x61725f30, 0x6665676e, 0x742e676f, 0xab00706d, 0x00000028, 
    0x00000019, 0x000001d0, 0x0000001a, 0x000001dc, 0x0000001b, 0x000001e8, 
    0x0000001c, 0x000001f4, 0x0000001d, 0x00000200, 0x0000002c, 0x0000020c, 
    0x0000002d, 0x0000021c, 0x0000002e, 0x0000022c, 0x0000002f, 0x0000023c, 
    0x00000030, 0x0000024c, 0x00000037, 0x00000258, 0x00000038, 0x00000268, 
    0x00000039, 0x00000278, 0x00000043, 0x00000288, 0x0000004b, 0x0000029c, 
    0x00000054, 0x000002ac, 0x00000055, 0x000002bc, 0x00000056, 0x000002cc, 
    0x00000057, 0x000002dc, 0x00000058, 0x000002e8, 0x0000005a, 0x000002f4, 
    0x0000005b, 0x00000304, 0x00000065, 0x00000314, 0x00000066, 0x00000320, 
    0x00000067, 0x00000330, 0x00000068, 0x00000340, 0x0000006a, 0x0000034c, 
    0x0000006b, 0x00000358, 0x0000006c, 0x00000368, 0x0000006d, 0x00000378, 
    0x0000006f, 0x00000384, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 
    0x6c626d65, 0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 
    0x80000003, 0x900f0003, 0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 
    0x80000006, 0x900f000b, 0x0000001f, 0x80000007, 0x900f000c, 0x00000009, 
    0x80010000, 0x90e40000, 0xa0e40004, 0x00000009, 0x80020000, 0x90e40000, 
    0xa0e40005, 0x00000009, 0x80040000, 0x90e40000, 0xa0e40006, 0x00000009, 
    0x80080000, 0x90e40000, 0xa0e40007, 0x00000001, 0xc00f0000, 0x80e40000, 
    0x00000009, 0x80010001, 0x90e40000, 0xa0e4002a, 0x00000009, 0x80020001, 
    0x90e40000, 0xa0e4002b, 0x00000009, 0x80040001, 0x90e40000, 0xa0e4002c, 
    0x00000004, 0xc00f0001, 0x81aa0000, 0xa0ff0010, 0xa0000010, 0x00000002, 
    0x80070002, 0x81e40001, 0xa0e40002, 0x00000008, 0x80010003, 0x80e40002, 
    0x90e4000b, 0x00000008, 0x80020003, 0x80e40002, 0x90e4000c, 0x00000008, 
    0x80040003, 0x80e40002, 0x90e40003, 0x00000001, 0x80080003, 0xa0000000, 
    0x00000001, 0xe00f0005, 0x80e40003, 0x00000009, 0xe0010000, 0x90e40007, 
    0xa0e4005b, 0x00000009, 0xe0020000, 0x90e40007, 0xa0e4005c, 0x00000001, 
    0x800f0004, 0x80e40000, 0x00000002, 0x80030004, 0x80e40004, 0x80ff0004, 
    0x00000005, 0x80030004, 0x80e40004, 0xa0ff0000, 0x00000001, 0xe00f0001, 
    0x80e40004, 0x00000001, 0x80020000, 0x81550000, 0x00000002, 0x80030000, 
    0x80e40000, 0x80ff0000, 0x00000005, 0x80030000, 0x80e40000, 0xa0ff0000, 
    0x00000001, 0xe00f0002, 0x80e40000, 0x00000001, 0xe00f0004, 0xa0e4005e, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Water_ps14_none_none_none_none_0_heightfog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Water_ps14_none_none_none_none_0_heightfog[] =
{
    0xfffe0101, 0x0072fffe, 0x47554244, 0x00000028, 0x000001ac, 0x00000000, 
    0x00000001, 0x000000b0, 0x0000001f, 0x000000b4, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7461575f, 
    0x705f7265, 0x5f343173, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 0x6e5f656e, 
    0x5f656e6f, 0x65685f30, 0x74686769, 0x2e676f66, 0x00706d74, 0x00000028, 
    0x00000019, 0x000001d0, 0x0000001a, 0x000001dc, 0x0000001b, 0x000001e8, 
    0x0000001c, 0x000001f4, 0x0000001d, 0x00000200, 0x0000002c, 0x0000020c, 
    0x0000002d, 0x0000021c, 0x0000002e, 0x0000022c, 0x0000002f, 0x0000023c, 
    0x00000030, 0x0000024c, 0x00000037, 0x00000258, 0x00000038, 0x00000268, 
    0x00000039, 0x00000278, 0x00000043, 0x00000288, 0x0000004b, 0x0000029c, 
    0x00000054, 0x000002ac, 0x00000055, 0x000002bc, 0x00000056, 0x000002cc, 
    0x00000057, 0x000002dc, 0x00000058, 0x000002e8, 0x0000005a, 0x000002f4, 
    0x0000005b, 0x00000304, 0x00000065, 0x00000314, 0x00000066, 0x00000320, 
    0x00000067, 0x00000330, 0x00000068, 0x00000340, 0x0000006a, 0x0000034c, 
    0x0000006b, 0x00000358, 0x0000006c, 0x00000368, 0x0000006d, 0x00000378, 
    0x0000006f, 0x00000384, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 
    0x6c626d65, 0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 
    0x80000003, 0x900f0003, 0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 
    0x80000006, 0x900f000b, 0x0000001f, 0x80000007, 0x900f000c, 0x00000009, 
    0x80010000, 0x90e40000, 0xa0e40004, 0x00000009, 0x80020000, 0x90e40000, 
    0xa0e40005, 0x00000009, 0x80040000, 0x90e40000, 0xa0e40006, 0x00000009, 
    0x80080000, 0x90e40000, 0xa0e40007, 0x00000001, 0xc00f0000, 0x80e40000, 
    0x00000009, 0x80010001, 0x90e40000, 0xa0e4002a, 0x00000009, 0x80020001, 
    0x90e40000, 0xa0e4002b, 0x00000009, 0x80040001, 0x90e40000, 0xa0e4002c, 
    0x00000004, 0xc00f0001, 0x81aa0000, 0xa0ff0010, 0xa0000010, 0x00000002, 
    0x80070002, 0x81e40001, 0xa0e40002, 0x00000008, 0x80010003, 0x80e40002, 
    0x90e4000b, 0x00000008, 0x80020003, 0x80e40002, 0x90e4000c, 0x00000008, 
    0x80040003, 0x80e40002, 0x90e40003, 0x00000001, 0x80080003, 0xa0000000, 
    0x00000001, 0xe00f0005, 0x80e40003, 0x00000009, 0xe0010000, 0x90e40007, 
    0xa0e4005b, 0x00000009, 0xe0020000, 0x90e40007, 0xa0e4005c, 0x00000001, 
    0x800f0004, 0x80e40000, 0x00000002, 0x80030004, 0x80e40004, 0x80ff0004, 
    0x00000005, 0x80030004, 0x80e40004, 0xa0ff0000, 0x00000001, 0xe00f0001, 
    0x80e40004, 0x00000001, 0x80020000, 0x81550000, 0x00000002, 0x80030000, 
    0x80e40000, 0x80ff0000, 0x00000005, 0x80030000, 0x80e40000, 0xa0ff0000, 
    0x00000001, 0xe00f0002, 0x80e40000, 0x00000001, 0xe00f0004, 0xa0e4005e, 
    0x0000ffff
};
static PrecompiledShaderByteCode_t Water_ps14_vertex_shaders[] = {
{ 	vertexShader_Water_ps14_none_none_none_none_0_rangefog, sizeof( 	vertexShader_Water_ps14_none_none_none_none_0_rangefog ) },
{ 	vertexShader_Water_ps14_none_none_none_none_0_heightfog, sizeof( 	vertexShader_Water_ps14_none_none_none_none_0_heightfog ) },
};
struct Water_ps14_VertexShader_t : public PrecompiledShader_t
{
	Water_ps14_VertexShader_t()
	{
		m_nFlags = 0;
		m_nFlags |= SHADER_USES_HEIGHT_FOG;
		m_nFlags |= SHADER_USES_MODEL_VIEW_PROJ_MATRIX;
		m_nFlags |= SHADER_USES_MODEL_MATRIX;
		m_pByteCode = Water_ps14_vertex_shaders;
		m_pName = "Water_ps14";
		m_nShaderCount = 2;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static Water_ps14_VertexShader_t Water_ps14_VertexShaderInstance;
