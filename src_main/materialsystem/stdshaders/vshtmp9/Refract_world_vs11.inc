//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Refract_world_vs11_none_none_none_none_0_rangefog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Refract_world_vs11_none_none_none_none_0_rangefog[] =
{
    0xfffe0101, 0x00a0fffe, 0x47554244, 0x00000028, 0x00000264, 0x00000000, 
    0x00000001, 0x000000b8, 0x00000035, 0x000000bc, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x6665525f, 
    0x74636172, 0x726f775f, 0x765f646c, 0x5f313173, 0x656e6f6e, 0x6e6f6e5f, 
    0x6f6e5f65, 0x6e5f656e, 0x5f656e6f, 0x61725f30, 0x6665676e, 0x742e676f, 
    0xab00706d, 0x00000028, 0x00000017, 0x00000288, 0x00000018, 0x00000294, 
    0x00000019, 0x000002a0, 0x0000001a, 0x000002ac, 0x0000001b, 0x000002b8, 
    0x00000043, 0x000002c4, 0x00000044, 0x000002d4, 0x00000045, 0x000002e4, 
    0x00000046, 0x000002f4, 0x00000047, 0x00000304, 0x00000048, 0x00000310, 
    0x00000049, 0x00000320, 0x0000004a, 0x00000330, 0x0000004b, 0x00000340, 
    0x0000004c, 0x00000350, 0x0000004d, 0x00000360, 0x0000004e, 0x00000370, 
    0x0000004f, 0x00000380, 0x00000050, 0x00000390, 0x00000051, 0x000003a0, 
    0x00000052, 0x000003b0, 0x00000053, 0x000003c0, 0x0000005d, 0x000003d0, 
    0x00000068, 0x000003e4, 0x0000007f, 0x000003f4, 0x00000080, 0x00000404, 
    0x00000081, 0x00000414, 0x00000082, 0x00000424, 0x00000083, 0x00000434, 
    0x00000084, 0x00000440, 0x00000086, 0x00000450, 0x00000087, 0x00000464, 
    0x00000088, 0x00000474, 0x0000008a, 0x00000484, 0x0000008c, 0x00000490, 
    0x000000ae, 0x0000049c, 0x000000b0, 0x000004a8, 0x000000b1, 0x000004b8, 
    0x000000b2, 0x000004c8, 0x000000b4, 0x000004d8, 0x000000b5, 0x000004e4, 
    0x000000c7, 0x000004f4, 0x000000c8, 0x00000504, 0x000000ca, 0x00000514, 
    0x000000df, 0x00000524, 0x000000e0, 0x00000534, 0x000000e2, 0x00000544, 
    0x000000e7, 0x00000554, 0x000000e8, 0x00000564, 0x000000e9, 0x00000574, 
    0x000000ea, 0x00000580, 0x000000eb, 0x00000590, 0x000000ec, 0x000005a0, 
    0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0xab007265, 
    0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x80000003, 0x900f0003, 
    0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 0x80000006, 0x900f000b, 
    0x0000001f, 0x80000007, 0x900f000c, 0x00000009, 0x80010004, 0x90e40000, 
    0xa0e40004, 0x00000009, 0x80020004, 0x90e40000, 0xa0e40005, 0x00000009, 
    0x80040004, 0x90e40000, 0xa0e40006, 0x00000009, 0x80080004, 0x90e40000, 
    0xa0e40007, 0x00000001, 0xc00f0000, 0x80e40004, 0x00000008, 0x80010000, 
    0x90e40000, 0xa0e4002a, 0x00000008, 0x80020000, 0x90e40000, 0xa0e4002b, 
    0x00000008, 0x80040000, 0x90e40000, 0xa0e4002c, 0x00000008, 0x80010001, 
    0x90e40003, 0xa0e4002a, 0x00000008, 0x80020001, 0x90e40003, 0xa0e4002b, 
    0x00000008, 0x80040001, 0x90e40003, 0xa0e4002c, 0x00000008, 0x80010002, 
    0x90e4000b, 0xa0e4002a, 0x00000008, 0x80020002, 0x90e4000b, 0xa0e4002b, 
    0x00000008, 0x80040002, 0x90e4000b, 0xa0e4002c, 0x00000008, 0x80010003, 
    0x90e4000c, 0xa0e4002a, 0x00000008, 0x80020003, 0x90e4000c, 0xa0e4002b, 
    0x00000008, 0x80040003, 0x90e4000c, 0xa0e4002c, 0x00000004, 0xc00f0001, 
    0x81aa0004, 0xa0ff0010, 0xa0000010, 0x00000002, 0x80070005, 0x81e40000, 
    0xa0e40002, 0x00000008, 0x80010006, 0x80e40005, 0x80e40002, 0x00000008, 
    0x80020006, 0x80e40005, 0x80e40003, 0x00000008, 0x80040006, 0x80e40005, 
    0x80e40001, 0x00000008, 0x80080006, 0x80e40006, 0x80e40006, 0x00000007, 
    0x80080006, 0x80ff0006, 0x00000005, 0x800f0006, 0x80e40006, 0x80ff0006, 
    0x00000004, 0xd0070000, 0x80e40006, 0xa0ff0000, 0xa0ff0000, 0x00000009, 
    0x80010007, 0x90e40007, 0xa0e4005b, 0x00000009, 0x80020007, 0x90e40007, 
    0xa0e4005c, 0x00000001, 0xe0030000, 0x80e40007, 0x00000001, 0xe0030003, 
    0x80e40007, 0x00000001, 0xc00f0000, 0x80e40004, 0x00000005, 0x80020004, 
    0x80550004, 0xa0ff005e, 0x00000002, 0x80030004, 0x80540004, 0x80ff0004, 
    0x00000005, 0x80030004, 0x80540004, 0xa0ff0000, 0x00000006, 0x80080008, 
    0x80ff0004, 0x00000005, 0x800f0004, 0x80e40004, 0x80ff0008, 0x00000008, 
    0x80010009, 0x80e40002, 0xa0e40008, 0x00000008, 0x80020009, 0x80e40002, 
    0xa0e40009, 0x00000005, 0x80030009, 0x80540009, 0x80ff0008, 0x00000008, 
    0x8001000a, 0x80e40003, 0xa0e40008, 0x00000008, 0x8002000a, 0x80e40003, 
    0xa0e40009, 0x00000005, 0x8003000a, 0x8054000a, 0x80ff0008, 0x00000005, 
    0xe0010001, 0x80000009, 0xa000005d, 0x00000005, 0xe0020001, 0x8000000a, 
    0xa000005d, 0x00000001, 0xe0040001, 0x80000004, 0x00000005, 0xe0010002, 
    0x80550009, 0xa100005d, 0x00000005, 0xe0020002, 0x8055000a, 0xa100005d, 
    0x00000001, 0xe0040002, 0x80550004, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Refract_world_vs11_none_none_none_none_0_heightfog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Refract_world_vs11_none_none_none_none_0_heightfog[] =
{
    0xfffe0101, 0x00aafffe, 0x47554244, 0x00000028, 0x0000028c, 0x00000000, 
    0x00000001, 0x000000b8, 0x0000003a, 0x000000bc, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x6665525f, 
    0x74636172, 0x726f775f, 0x765f646c, 0x5f313173, 0x656e6f6e, 0x6e6f6e5f, 
    0x6f6e5f65, 0x6e5f656e, 0x5f656e6f, 0x65685f30, 0x74686769, 0x2e676f66, 
    0x00706d74, 0x00000028, 0x00000017, 0x000002b0, 0x00000018, 0x000002bc, 
    0x00000019, 0x000002c8, 0x0000001a, 0x000002d4, 0x0000001b, 0x000002e0, 
    0x00000043, 0x000002ec, 0x00000044, 0x000002fc, 0x00000045, 0x0000030c, 
    0x00000046, 0x0000031c, 0x00000047, 0x0000032c, 0x00000048, 0x00000338, 
    0x00000049, 0x00000348, 0x0000004a, 0x00000358, 0x0000004b, 0x00000368, 
    0x0000004c, 0x00000378, 0x0000004d, 0x00000388, 0x0000004e, 0x00000398, 
    0x0000004f, 0x000003a8, 0x00000050, 0x000003b8, 0x00000051, 0x000003c8, 
    0x00000052, 0x000003d8, 0x00000053, 0x000003e8, 0x00000068, 0x000003f8, 
    0x0000006d, 0x00000408, 0x0000006f, 0x00000418, 0x00000070, 0x00000424, 
    0x00000078, 0x00000434, 0x0000007a, 0x00000444, 0x0000008d, 0x00000458, 
    0x000000a4, 0x00000468, 0x000000a5, 0x00000478, 0x000000a6, 0x00000488, 
    0x000000a7, 0x00000498, 0x000000a8, 0x000004a8, 0x000000a9, 0x000004b4, 
    0x000000ab, 0x000004c4, 0x000000ac, 0x000004d8, 0x000000ad, 0x000004e8, 
    0x000000af, 0x000004f8, 0x000000b1, 0x00000504, 0x000000d3, 0x00000510, 
    0x000000d5, 0x0000051c, 0x000000d6, 0x0000052c, 0x000000d7, 0x0000053c, 
    0x000000d9, 0x0000054c, 0x000000da, 0x00000558, 0x000000ec, 0x00000568, 
    0x000000ed, 0x00000578, 0x000000ef, 0x00000588, 0x00000104, 0x00000598, 
    0x00000105, 0x000005a8, 0x00000107, 0x000005b8, 0x0000010c, 0x000005c8, 
    0x0000010d, 0x000005d8, 0x0000010e, 0x000005e8, 0x0000010f, 0x000005f4, 
    0x00000110, 0x00000604, 0x00000111, 0x00000614, 0x58443344, 0x68532039, 
    0x72656461, 0x73734120, 0x6c626d65, 0xab007265, 0x0000001f, 0x80000000, 
    0x900f0000, 0x0000001f, 0x80000003, 0x900f0003, 0x0000001f, 0x80000005, 
    0x900f0007, 0x0000001f, 0x80000006, 0x900f000b, 0x0000001f, 0x80000007, 
    0x900f000c, 0x00000009, 0x80010004, 0x90e40000, 0xa0e40004, 0x00000009, 
    0x80020004, 0x90e40000, 0xa0e40005, 0x00000009, 0x80040004, 0x90e40000, 
    0xa0e40006, 0x00000009, 0x80080004, 0x90e40000, 0xa0e40007, 0x00000001, 
    0xc00f0000, 0x80e40004, 0x00000008, 0x80010000, 0x90e40000, 0xa0e4002a, 
    0x00000008, 0x80020000, 0x90e40000, 0xa0e4002b, 0x00000008, 0x80040000, 
    0x90e40000, 0xa0e4002c, 0x00000008, 0x80010001, 0x90e40003, 0xa0e4002a, 
    0x00000008, 0x80020001, 0x90e40003, 0xa0e4002b, 0x00000008, 0x80040001, 
    0x90e40003, 0xa0e4002c, 0x00000008, 0x80010002, 0x90e4000b, 0xa0e4002a, 
    0x00000008, 0x80020002, 0x90e4000b, 0xa0e4002b, 0x00000008, 0x80040002, 
    0x90e4000b, 0xa0e4002c, 0x00000008, 0x80010003, 0x90e4000c, 0xa0e4002a, 
    0x00000008, 0x80020003, 0x90e4000c, 0xa0e4002b, 0x00000008, 0x80040003, 
    0x90e4000c, 0xa0e4002c, 0x00000002, 0x80030005, 0xa0ab0002, 0x81aa0000, 
    0x0000000b, 0x80010005, 0x80000005, 0xa0000000, 0x00000006, 0x80040005, 
    0x80550005, 0x00000005, 0x80080005, 0x80000005, 0x80aa0005, 0x00000005, 
    0x80080005, 0x80ff0005, 0x80aa0004, 0x00000004, 0xc00f0001, 0x81ff0005, 
    0xa0ff0010, 0xa0550010, 0x00000002, 0x80070005, 0x81e40000, 0xa0e40002, 
    0x00000008, 0x80010006, 0x80e40005, 0x80e40002, 0x00000008, 0x80020006, 
    0x80e40005, 0x80e40003, 0x00000008, 0x80040006, 0x80e40005, 0x80e40001, 
    0x00000008, 0x80080006, 0x80e40006, 0x80e40006, 0x00000007, 0x80080006, 
    0x80ff0006, 0x00000005, 0x800f0006, 0x80e40006, 0x80ff0006, 0x00000004, 
    0xd0070000, 0x80e40006, 0xa0ff0000, 0xa0ff0000, 0x00000009, 0x80010007, 
    0x90e40007, 0xa0e4005b, 0x00000009, 0x80020007, 0x90e40007, 0xa0e4005c, 
    0x00000001, 0xe0030000, 0x80e40007, 0x00000001, 0xe0030003, 0x80e40007, 
    0x00000001, 0xc00f0000, 0x80e40004, 0x00000005, 0x80020004, 0x80550004, 
    0xa0ff005e, 0x00000002, 0x80030004, 0x80540004, 0x80ff0004, 0x00000005, 
    0x80030004, 0x80540004, 0xa0ff0000, 0x00000006, 0x80080008, 0x80ff0004, 
    0x00000005, 0x800f0004, 0x80e40004, 0x80ff0008, 0x00000008, 0x80010009, 
    0x80e40002, 0xa0e40008, 0x00000008, 0x80020009, 0x80e40002, 0xa0e40009, 
    0x00000005, 0x80030009, 0x80540009, 0x80ff0008, 0x00000008, 0x8001000a, 
    0x80e40003, 0xa0e40008, 0x00000008, 0x8002000a, 0x80e40003, 0xa0e40009, 
    0x00000005, 0x8003000a, 0x8054000a, 0x80ff0008, 0x00000005, 0xe0010001, 
    0x80000009, 0xa000005d, 0x00000005, 0xe0020001, 0x8000000a, 0xa000005d, 
    0x00000001, 0xe0040001, 0x80000004, 0x00000005, 0xe0010002, 0x80550009, 
    0xa100005d, 0x00000005, 0xe0020002, 0x8055000a, 0xa100005d, 0x00000001, 
    0xe0040002, 0x80550004, 0x0000ffff
};
static PrecompiledShaderByteCode_t Refract_world_vs11_vertex_shaders[] = {
{ 	vertexShader_Refract_world_vs11_none_none_none_none_0_rangefog, sizeof( 	vertexShader_Refract_world_vs11_none_none_none_none_0_rangefog ) },
{ 	vertexShader_Refract_world_vs11_none_none_none_none_0_heightfog, sizeof( 	vertexShader_Refract_world_vs11_none_none_none_none_0_heightfog ) },
};
struct Refract_world_vs11_VertexShader_t : public PrecompiledShader_t
{
	Refract_world_vs11_VertexShader_t()
	{
		m_nFlags = 0;
		m_nFlags |= SHADER_USES_HEIGHT_FOG;
		m_nFlags |= SHADER_USES_MODEL_VIEW_PROJ_MATRIX;
		m_nFlags |= SHADER_USES_MODEL_MATRIX;
		m_pByteCode = Refract_world_vs11_vertex_shaders;
		m_pName = "Refract_world_vs11";
		m_nShaderCount = 2;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static Refract_world_vs11_VertexShader_t Refract_world_vs11_VertexShaderInstance;
