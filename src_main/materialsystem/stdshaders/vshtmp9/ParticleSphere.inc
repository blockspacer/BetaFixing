//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_ParticleSphere_none_none_none_none_0_rangefog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_ParticleSphere_none_none_none_none_0_rangefog[] =
{
    0xfffe0101, 0x008bfffe, 0x47554244, 0x00000028, 0x00000210, 0x00000000, 
    0x00000001, 0x000000b4, 0x0000002b, 0x000000b8, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7261505f, 
    0x6c636974, 0x68705365, 0x5f657265, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 
    0x6e5f656e, 0x5f656e6f, 0x61725f30, 0x6665676e, 0x742e676f, 0xab00706d, 
    0x00000028, 0x00000009, 0x00000234, 0x0000000a, 0x00000240, 0x0000000b, 
    0x0000024c, 0x0000000c, 0x00000258, 0x00000036, 0x00000264, 0x00000037, 
    0x00000274, 0x00000038, 0x00000284, 0x00000039, 0x00000294, 0x0000003a, 
    0x000002a4, 0x0000004d, 0x000002b0, 0x00000058, 0x000002c4, 0x0000005c, 
    0x000002d0, 0x0000005d, 0x000002dc, 0x0000006c, 0x000002e8, 0x0000006d, 
    0x000002f8, 0x0000006e, 0x00000304, 0x0000006f, 0x00000314, 0x00000072, 
    0x00000320, 0x00000074, 0x00000330, 0x00000075, 0x00000340, 0x00000076, 
    0x0000034c, 0x00000078, 0x0000035c, 0x00000079, 0x0000036c, 0x0000007a, 
    0x00000380, 0x0000007c, 0x00000390, 0x0000007d, 0x000003a0, 0x0000007e, 
    0x000003b4, 0x00000082, 0x000003c8, 0x00000083, 0x000003d8, 0x00000084, 
    0x000003e4, 0x00000085, 0x000003f4, 0x00000086, 0x00000404, 0x0000008a, 
    0x00000414, 0x0000008b, 0x00000424, 0x0000008d, 0x00000430, 0x0000008f, 
    0x00000440, 0x00000091, 0x00000450, 0x00000092, 0x00000460, 0x00000093, 
    0x0000046c, 0x00000094, 0x0000047c, 0x00000096, 0x0000048c, 0x00000097, 
    0x0000049c, 0x00000099, 0x000004b0, 0x58443344, 0x68532039, 0x72656461, 
    0x73734120, 0x6c626d65, 0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 
    0x0000001f, 0x8000000a, 0x900f0005, 0x0000001f, 0x8001000a, 0x900f0006, 
    0x0000001f, 0x80000005, 0x900f0007, 0x00000009, 0x80010000, 0x90e40000, 
    0xa0e40004, 0x00000009, 0x80020000, 0x90e40000, 0xa0e40005, 0x00000009, 
    0x80040000, 0x90e40000, 0xa0e40006, 0x00000009, 0x80080000, 0x90e40000, 
    0xa0e40007, 0x00000001, 0xc00f0000, 0x80e40000, 0x00000004, 0xc00f0001, 
    0x81aa0000, 0xa0ff0010, 0xa0000010, 0x00000001, 0xb0010000, 0x90aa0007, 
    0x00000001, 0xe00f0000, 0x90e40007, 0x00000001, 0xd0070001, 0x90e40005, 
    0x00000008, 0x800f0001, 0x90e40000, 0x90e40000, 0x00000007, 0x800f0005, 
    0x80ff0001, 0x00000005, 0x800f0005, 0x80e40005, 0x90e40000, 0x00000001, 
    0x80040005, 0x81aa0005, 0x00000005, 0x800f0001, 0x80d80005, 0xa0e4005a, 
    0x00000008, 0x800f0002, 0x80e40001, 0x80e40001, 0x00000007, 0x800f0002, 
    0x80ff0002, 0x00000005, 0x800f0001, 0x80e40001, 0x80e40002, 0x00000005, 
    0x800f0002, 0x80c90001, 0x80d20005, 0x00000004, 0x800f0002, 0x81d20001, 
    0x80c90005, 0x80e40002, 0x00000002, 0x800f0003, 0xa0e4202d, 0x91e40000, 
    0x00000005, 0x800f0000, 0x80e40002, 0x80000003, 0x00000004, 0x800f0000, 
    0x80e40001, 0x80550003, 0x80e40000, 0x00000004, 0x800f0000, 0x80e40005, 
    0x80aa0003, 0x80e40000, 0x00000008, 0x800f0002, 0x80e40000, 0x80e40000, 
    0x00000007, 0x800f0003, 0x80ff0002, 0x00000005, 0x800f0008, 0x80e40000, 
    0x80e40003, 0x00000005, 0x800f0009, 0x80e40008, 0xa000005b, 0x00000002, 
    0xe00f0001, 0x80e40009, 0xa0ff0000, 0x00000005, 0x800f0008, 0xa0e4202e, 
    0x90e40006, 0x00000006, 0x800f0007, 0x80ff0002, 0x00000005, 0x800f0008, 
    0x80e40008, 0x80e40007, 0x00000005, 0x800f0009, 0x80e40007, 0xa0e4202e, 
    0x0000000d, 0x800f000a, 0x80000009, 0xa0550000, 0x00000006, 0x800f0006, 
    0x80000009, 0x00000005, 0x800f0006, 0x80e40006, 0x8000000a, 0x00000005, 
    0x800f0002, 0x80e40008, 0x80e40006, 0x0000000c, 0x800f000b, 0x80000009, 
    0xa0550000, 0x00000004, 0xd0070000, 0x80e40008, 0x80e4000b, 0x80e40002, 
    0x00000001, 0xd0080000, 0x90ff0005, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_ParticleSphere_none_none_none_none_0_heightfog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_ParticleSphere_none_none_none_none_0_heightfog[] =
{
    0xfffe0101, 0x0097fffe, 0x47554244, 0x00000028, 0x00000240, 0x00000000, 
    0x00000001, 0x000000b4, 0x00000031, 0x000000b8, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7261505f, 
    0x6c636974, 0x68705365, 0x5f657265, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 
    0x6e5f656e, 0x5f656e6f, 0x65685f30, 0x74686769, 0x2e676f66, 0x00706d74, 
    0x00000028, 0x00000009, 0x00000264, 0x0000000a, 0x00000270, 0x0000000b, 
    0x0000027c, 0x0000000c, 0x00000288, 0x00000036, 0x00000294, 0x00000037, 
    0x000002a4, 0x00000038, 0x000002b4, 0x00000039, 0x000002c4, 0x0000003a, 
    0x000002d4, 0x00000044, 0x000002e0, 0x00000057, 0x000002f0, 0x0000005c, 
    0x00000300, 0x0000005e, 0x00000310, 0x0000005f, 0x0000031c, 0x00000067, 
    0x0000032c, 0x00000069, 0x0000033c, 0x00000079, 0x00000350, 0x0000007d, 
    0x0000035c, 0x0000007e, 0x00000368, 0x0000008d, 0x00000374, 0x0000008e, 
    0x00000384, 0x0000008f, 0x00000390, 0x00000090, 0x000003a0, 0x00000093, 
    0x000003ac, 0x00000095, 0x000003bc, 0x00000096, 0x000003cc, 0x00000097, 
    0x000003d8, 0x00000099, 0x000003e8, 0x0000009a, 0x000003f8, 0x0000009b, 
    0x0000040c, 0x0000009d, 0x0000041c, 0x0000009e, 0x0000042c, 0x0000009f, 
    0x00000440, 0x000000a3, 0x00000454, 0x000000a4, 0x00000464, 0x000000a5, 
    0x00000470, 0x000000a6, 0x00000480, 0x000000a7, 0x00000490, 0x000000ab, 
    0x000004a0, 0x000000ac, 0x000004b0, 0x000000ae, 0x000004bc, 0x000000b0, 
    0x000004cc, 0x000000b2, 0x000004dc, 0x000000b3, 0x000004ec, 0x000000b4, 
    0x000004f8, 0x000000b5, 0x00000508, 0x000000b7, 0x00000518, 0x000000b8, 
    0x00000528, 0x000000ba, 0x0000053c, 0x58443344, 0x68532039, 0x72656461, 
    0x73734120, 0x6c626d65, 0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 
    0x0000001f, 0x8000000a, 0x900f0005, 0x0000001f, 0x8001000a, 0x900f0006, 
    0x0000001f, 0x80000005, 0x900f0007, 0x00000009, 0x80010000, 0x90e40000, 
    0xa0e40004, 0x00000009, 0x80020000, 0x90e40000, 0xa0e40005, 0x00000009, 
    0x80040000, 0x90e40000, 0xa0e40006, 0x00000009, 0x80080000, 0x90e40000, 
    0xa0e40007, 0x00000001, 0xc00f0000, 0x80e40000, 0x00000009, 0x80040001, 
    0x90e40000, 0xa0e4002c, 0x00000002, 0x80030002, 0xa0ab0002, 0x81aa0001, 
    0x0000000b, 0x80010002, 0x80000002, 0xa0000000, 0x00000006, 0x80040002, 
    0x80550002, 0x00000005, 0x80080002, 0x80000002, 0x80aa0002, 0x00000005, 
    0x80080002, 0x80ff0002, 0x80aa0000, 0x00000004, 0xc00f0001, 0x81ff0002, 
    0xa0ff0010, 0xa0550010, 0x00000001, 0xb0010000, 0x90aa0007, 0x00000001, 
    0xe00f0000, 0x90e40007, 0x00000001, 0xd0070001, 0x90e40005, 0x00000008, 
    0x800f0001, 0x90e40000, 0x90e40000, 0x00000007, 0x800f0005, 0x80ff0001, 
    0x00000005, 0x800f0005, 0x80e40005, 0x90e40000, 0x00000001, 0x80040005, 
    0x81aa0005, 0x00000005, 0x800f0001, 0x80d80005, 0xa0e4005a, 0x00000008, 
    0x800f0002, 0x80e40001, 0x80e40001, 0x00000007, 0x800f0002, 0x80ff0002, 
    0x00000005, 0x800f0001, 0x80e40001, 0x80e40002, 0x00000005, 0x800f0002, 
    0x80c90001, 0x80d20005, 0x00000004, 0x800f0002, 0x81d20001, 0x80c90005, 
    0x80e40002, 0x00000002, 0x800f0003, 0xa0e4202d, 0x91e40000, 0x00000005, 
    0x800f0000, 0x80e40002, 0x80000003, 0x00000004, 0x800f0000, 0x80e40001, 
    0x80550003, 0x80e40000, 0x00000004, 0x800f0000, 0x80e40005, 0x80aa0003, 
    0x80e40000, 0x00000008, 0x800f0002, 0x80e40000, 0x80e40000, 0x00000007, 
    0x800f0003, 0x80ff0002, 0x00000005, 0x800f0008, 0x80e40000, 0x80e40003, 
    0x00000005, 0x800f0009, 0x80e40008, 0xa000005b, 0x00000002, 0xe00f0001, 
    0x80e40009, 0xa0ff0000, 0x00000005, 0x800f0008, 0xa0e4202e, 0x90e40006, 
    0x00000006, 0x800f0007, 0x80ff0002, 0x00000005, 0x800f0008, 0x80e40008, 
    0x80e40007, 0x00000005, 0x800f0009, 0x80e40007, 0xa0e4202e, 0x0000000d, 
    0x800f000a, 0x80000009, 0xa0550000, 0x00000006, 0x800f0006, 0x80000009, 
    0x00000005, 0x800f0006, 0x80e40006, 0x8000000a, 0x00000005, 0x800f0002, 
    0x80e40008, 0x80e40006, 0x0000000c, 0x800f000b, 0x80000009, 0xa0550000, 
    0x00000004, 0xd0070000, 0x80e40008, 0x80e4000b, 0x80e40002, 0x00000001, 
    0xd0080000, 0x90ff0005, 0x0000ffff
};
static PrecompiledShaderByteCode_t ParticleSphere_vertex_shaders[] = {
{ 	vertexShader_ParticleSphere_none_none_none_none_0_rangefog, sizeof( 	vertexShader_ParticleSphere_none_none_none_none_0_rangefog ) },
{ 	vertexShader_ParticleSphere_none_none_none_none_0_heightfog, sizeof( 	vertexShader_ParticleSphere_none_none_none_none_0_heightfog ) },
};
struct ParticleSphere_VertexShader_t : public PrecompiledShader_t
{
	ParticleSphere_VertexShader_t()
	{
		m_nFlags = 0;
		m_nFlags |= SHADER_USES_HEIGHT_FOG;
		m_nFlags |= SHADER_USES_MODEL_VIEW_PROJ_MATRIX;
		m_nFlags |= SHADER_USES_MODEL_MATRIX;
		m_pByteCode = ParticleSphere_vertex_shaders;
		m_pName = "ParticleSphere";
		m_nShaderCount = 2;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static ParticleSphere_VertexShader_t ParticleSphere_VertexShaderInstance;
