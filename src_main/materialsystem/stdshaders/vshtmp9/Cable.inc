//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Cable_none_none_none_none_0_rangefog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Cable_none_none_none_none_0_rangefog[] =
{
    0xfffe0101, 0x0071fffe, 0x47554244, 0x00000028, 0x000001a8, 0x00000000, 
    0x00000001, 0x000000ac, 0x0000001f, 0x000000b0, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x6261435f, 
    0x6e5f656c, 0x5f656e6f, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 0x305f656e, 
    0x6e61725f, 0x6f666567, 0x6d742e67, 0xabab0070, 0x00000028, 0x00000009, 
    0x000001cc, 0x0000000a, 0x000001d8, 0x0000000b, 0x000001e4, 0x0000000c, 
    0x000001f0, 0x0000000d, 0x000001fc, 0x0000000e, 0x00000208, 0x00000022, 
    0x00000214, 0x00000023, 0x00000224, 0x00000024, 0x00000234, 0x00000025, 
    0x00000244, 0x00000026, 0x00000254, 0x00000039, 0x00000260, 0x0000005b, 
    0x00000274, 0x0000005c, 0x00000280, 0x0000005d, 0x0000028c, 0x0000005e, 
    0x0000029c, 0x00000071, 0x000002b0, 0x00000072, 0x000002c0, 0x00000073, 
    0x000002cc, 0x00000075, 0x000002dc, 0x00000076, 0x000002ec, 0x00000077, 
    0x000002f8, 0x00000080, 0x00000308, 0x00000081, 0x00000318, 0x00000092, 
    0x0000032c, 0x00000093, 0x0000033c, 0x00000094, 0x0000034c, 0x000000a5, 
    0x0000035c, 0x000000ac, 0x0000036c, 0x000000ad, 0x00000378, 0x000000af, 
    0x00000384, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 
    0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x8000000a, 
    0x900f0005, 0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 0x80010005, 
    0x900f0008, 0x0000001f, 0x80000006, 0x900f000b, 0x0000001f, 0x80000007, 
    0x900f000c, 0x00000009, 0x80010000, 0x90e40000, 0xa0e40004, 0x00000009, 
    0x80020000, 0x90e40000, 0xa0e40005, 0x00000009, 0x80040000, 0x90e40000, 
    0xa0e40006, 0x00000009, 0x80080000, 0x90e40000, 0xa0e40007, 0x00000001, 
    0xc00f0000, 0x80e40000, 0x00000004, 0xc00f0001, 0x81aa0000, 0xa0ff0010, 
    0xa0000010, 0x00000001, 0x800f0000, 0x90e4000b, 0x00000001, 0x800f0001, 
    0x90e4000c, 0x00000005, 0x800f0002, 0x90c9000b, 0x80d20001, 0x00000004, 
    0x800f0003, 0x91d2000b, 0x80c90001, 0x80e40002, 0x00000008, 0x80080001, 
    0x90e4000b, 0x90e4000b, 0x00000007, 0x80080001, 0x80ff0001, 0x00000005, 
    0x80070001, 0x90e4000b, 0x80ff0001, 0x00000008, 0x80080003, 0x80e40003, 
    0x80e40003, 0x00000007, 0x80080003, 0x80ff0003, 0x00000005, 0x80070003, 
    0x80e40003, 0x80ff0003, 0x00000005, 0x800f0002, 0x80c90003, 0x80d20000, 
    0x00000004, 0x800f0002, 0x81d20003, 0x80c90000, 0x80e40002, 0x00000008, 
    0x80010000, 0x80e40001, 0xa0e4005a, 0x00000008, 0x80020000, 0x80e40002, 
    0xa0e4005a, 0x00000008, 0x80040000, 0x80e40003, 0xa0e4005a, 0x00000002, 
    0xd00f0001, 0x80e40000, 0xa0ff0000, 0x00000001, 0xe00f0000, 0x90e40007, 
    0x00000001, 0xe00f0001, 0x90e40008, 0x00000001, 0xd00f0000, 0x90e40005, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_Cable_none_none_none_none_0_heightfog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_Cable_none_none_none_none_0_heightfog[] =
{
    0xfffe0101, 0x007dfffe, 0x47554244, 0x00000028, 0x000001d8, 0x00000000, 
    0x00000001, 0x000000ac, 0x00000025, 0x000000b0, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x6261435f, 
    0x6e5f656c, 0x5f656e6f, 0x656e6f6e, 0x6e6f6e5f, 0x6f6e5f65, 0x305f656e, 
    0x6965685f, 0x66746867, 0x742e676f, 0xab00706d, 0x00000028, 0x00000009, 
    0x000001fc, 0x0000000a, 0x00000208, 0x0000000b, 0x00000214, 0x0000000c, 
    0x00000220, 0x0000000d, 0x0000022c, 0x0000000e, 0x00000238, 0x00000022, 
    0x00000244, 0x00000023, 0x00000254, 0x00000024, 0x00000264, 0x00000025, 
    0x00000274, 0x00000026, 0x00000284, 0x00000030, 0x00000290, 0x00000043, 
    0x000002a0, 0x00000048, 0x000002b0, 0x0000004a, 0x000002c0, 0x0000004b, 
    0x000002cc, 0x00000053, 0x000002dc, 0x00000055, 0x000002ec, 0x0000007c, 
    0x00000300, 0x0000007d, 0x0000030c, 0x0000007e, 0x00000318, 0x0000007f, 
    0x00000328, 0x00000092, 0x0000033c, 0x00000093, 0x0000034c, 0x00000094, 
    0x00000358, 0x00000096, 0x00000368, 0x00000097, 0x00000378, 0x00000098, 
    0x00000384, 0x000000a1, 0x00000394, 0x000000a2, 0x000003a4, 0x000000b3, 
    0x000003b8, 0x000000b4, 0x000003c8, 0x000000b5, 0x000003d8, 0x000000c6, 
    0x000003e8, 0x000000cd, 0x000003f8, 0x000000ce, 0x00000404, 0x000000d0, 
    0x00000410, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 
    0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x8000000a, 
    0x900f0005, 0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 0x80010005, 
    0x900f0008, 0x0000001f, 0x80000006, 0x900f000b, 0x0000001f, 0x80000007, 
    0x900f000c, 0x00000009, 0x80010000, 0x90e40000, 0xa0e40004, 0x00000009, 
    0x80020000, 0x90e40000, 0xa0e40005, 0x00000009, 0x80040000, 0x90e40000, 
    0xa0e40006, 0x00000009, 0x80080000, 0x90e40000, 0xa0e40007, 0x00000001, 
    0xc00f0000, 0x80e40000, 0x00000009, 0x80040001, 0x90e40000, 0xa0e4002c, 
    0x00000002, 0x80030002, 0xa0ab0002, 0x81aa0001, 0x0000000b, 0x80010002, 
    0x80000002, 0xa0000000, 0x00000006, 0x80040002, 0x80550002, 0x00000005, 
    0x80080002, 0x80000002, 0x80aa0002, 0x00000005, 0x80080002, 0x80ff0002, 
    0x80aa0000, 0x00000004, 0xc00f0001, 0x81ff0002, 0xa0ff0010, 0xa0550010, 
    0x00000001, 0x800f0000, 0x90e4000b, 0x00000001, 0x800f0001, 0x90e4000c, 
    0x00000005, 0x800f0002, 0x90c9000b, 0x80d20001, 0x00000004, 0x800f0003, 
    0x91d2000b, 0x80c90001, 0x80e40002, 0x00000008, 0x80080001, 0x90e4000b, 
    0x90e4000b, 0x00000007, 0x80080001, 0x80ff0001, 0x00000005, 0x80070001, 
    0x90e4000b, 0x80ff0001, 0x00000008, 0x80080003, 0x80e40003, 0x80e40003, 
    0x00000007, 0x80080003, 0x80ff0003, 0x00000005, 0x80070003, 0x80e40003, 
    0x80ff0003, 0x00000005, 0x800f0002, 0x80c90003, 0x80d20000, 0x00000004, 
    0x800f0002, 0x81d20003, 0x80c90000, 0x80e40002, 0x00000008, 0x80010000, 
    0x80e40001, 0xa0e4005a, 0x00000008, 0x80020000, 0x80e40002, 0xa0e4005a, 
    0x00000008, 0x80040000, 0x80e40003, 0xa0e4005a, 0x00000002, 0xd00f0001, 
    0x80e40000, 0xa0ff0000, 0x00000001, 0xe00f0000, 0x90e40007, 0x00000001, 
    0xe00f0001, 0x90e40008, 0x00000001, 0xd00f0000, 0x90e40005, 0x0000ffff
};
static PrecompiledShaderByteCode_t Cable_vertex_shaders[] = {
{ 	vertexShader_Cable_none_none_none_none_0_rangefog, sizeof( 	vertexShader_Cable_none_none_none_none_0_rangefog ) },
{ 	vertexShader_Cable_none_none_none_none_0_heightfog, sizeof( 	vertexShader_Cable_none_none_none_none_0_heightfog ) },
};
struct Cable_VertexShader_t : public PrecompiledShader_t
{
	Cable_VertexShader_t()
	{
		m_nFlags = 0;
		m_nFlags |= SHADER_USES_HEIGHT_FOG;
		m_nFlags |= SHADER_USES_MODEL_VIEW_PROJ_MATRIX;
		m_nFlags |= SHADER_USES_MODEL_MATRIX;
		m_pByteCode = Cable_vertex_shaders;
		m_pName = "Cable";
		m_nShaderCount = 2;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static Cable_VertexShader_t Cable_VertexShaderInstance;
