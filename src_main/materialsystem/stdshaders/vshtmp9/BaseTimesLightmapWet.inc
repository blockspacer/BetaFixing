//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_BaseTimesLightmapWet_none_none_none_none_0_rangefog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_BaseTimesLightmapWet_none_none_none_none_0_rangefog[] =
{
    0xfffe0101, 0x0071fffe, 0x47554244, 0x00000028, 0x000001a8, 0x00000000, 
    0x00000001, 0x000000bc, 0x0000001d, 0x000000c0, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7361425f, 
    0x6d695465, 0x694c7365, 0x6d746867, 0x65577061, 0x6f6e5f74, 0x6e5f656e, 
    0x5f656e6f, 0x656e6f6e, 0x6e6f6e5f, 0x5f305f65, 0x676e6172, 0x676f6665, 
    0x706d742e, 0xababab00, 0x00000028, 0x00000009, 0x000001cc, 0x0000000a, 
    0x000001d8, 0x0000000b, 0x000001e4, 0x0000000c, 0x000001f0, 0x0000000d, 
    0x000001fc, 0x00000016, 0x00000208, 0x00000017, 0x00000218, 0x00000018, 
    0x00000228, 0x00000019, 0x00000238, 0x00000020, 0x00000244, 0x00000021, 
    0x00000254, 0x00000022, 0x00000264, 0x00000023, 0x00000274, 0x00000024, 
    0x00000284, 0x00000032, 0x00000290, 0x0000003f, 0x000002a4, 0x00000040, 
    0x000002b4, 0x00000041, 0x000002c4, 0x00000042, 0x000002d4, 0x00000043, 
    0x000002e4, 0x00000044, 0x000002f4, 0x00000045, 0x00000304, 0x00000046, 
    0x00000314, 0x00000047, 0x00000324, 0x0000004e, 0x00000334, 0x00000055, 
    0x00000344, 0x00000056, 0x00000350, 0x00000057, 0x0000035c, 0x0000005f, 
    0x00000368, 0x58443344, 0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 
    0xab007265, 0x0000001f, 0x80000000, 0x900f0000, 0x0000001f, 0x80000003, 
    0x900f0003, 0x0000001f, 0x80000005, 0x900f0007, 0x0000001f, 0x80000006, 
    0x900f000b, 0x0000001f, 0x80000007, 0x900f000c, 0x00000009, 0x80010000, 
    0x90e40000, 0xa0e4002a, 0x00000009, 0x80020000, 0x90e40000, 0xa0e4002b, 
    0x00000009, 0x80040000, 0x90e40000, 0xa0e4002c, 0x00000001, 0x80080000, 
    0xa0550000, 0x00000009, 0x80010001, 0x80e40000, 0xa0e40008, 0x00000009, 
    0x80020001, 0x80e40000, 0xa0e40009, 0x00000009, 0x80040001, 0x80e40000, 
    0xa0e4000a, 0x00000009, 0x80080001, 0x80e40000, 0xa0e4000b, 0x00000001, 
    0xc00f0000, 0x80e40001, 0x00000004, 0xc00f0001, 0x81aa0001, 0xa0ff0010, 
    0xa0000010, 0x00000008, 0xe0010001, 0x90e4000b, 0xa0e4002a, 0x00000008, 
    0xe0020001, 0x90e4000b, 0xa0e4002b, 0x00000008, 0xe0040001, 0x90e4000b, 
    0xa0e4002c, 0x00000008, 0xe0010002, 0x90e4000c, 0xa0e4002a, 0x00000008, 
    0xe0020002, 0x90e4000c, 0xa0e4002b, 0x00000008, 0xe0040002, 0x90e4000c, 
    0xa0e4002c, 0x00000008, 0xe0010003, 0x90e40003, 0xa0e4002a, 0x00000008, 
    0xe0020003, 0x90e40003, 0xa0e4002b, 0x00000008, 0xe0040003, 0x90e40003, 
    0xa0e4002c, 0x00000002, 0x800f0001, 0xa0e40002, 0x81e40000, 0x00000001, 
    0xe0080001, 0x80000001, 0x00000001, 0xe0080002, 0x80550001, 0x00000001, 
    0xe0080003, 0x80aa0001, 0x00000001, 0xe00f0000, 0x90e40007, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Assembler
//
//  Source: vshtmp9\vertexShader_BaseTimesLightmapWet_none_none_none_none_0_heightfog.tmp
//  Flags: /Zi 
//


 static unsigned int vertexShader_BaseTimesLightmapWet_none_none_none_none_0_heightfog[] =
{
    0xfffe0101, 0x007bfffe, 0x47554244, 0x00000028, 0x000001d0, 0x00000000, 
    0x00000001, 0x000000bc, 0x00000022, 0x000000c0, 0x00000000, 0x00000000, 
    0x00000000, 0x505c3a43, 0x656a6f72, 0x5c737463, 0x61746542, 0x65786946, 
    0x65425c72, 0x69466174, 0x676e6978, 0x6372735c, 0x69616d5f, 0x616d5c6e, 
    0x69726574, 0x79736c61, 0x6d657473, 0x6474735c, 0x64616873, 0x5c737265, 
    0x74687376, 0x5c39706d, 0x74726576, 0x68537865, 0x72656461, 0x7361425f, 
    0x6d695465, 0x694c7365, 0x6d746867, 0x65577061, 0x6f6e5f74, 0x6e5f656e, 
    0x5f656e6f, 0x656e6f6e, 0x6e6f6e5f, 0x5f305f65, 0x67696568, 0x6f667468, 
    0x6d742e67, 0xabab0070, 0x00000028, 0x00000009, 0x000001f4, 0x0000000a, 
    0x00000200, 0x0000000b, 0x0000020c, 0x0000000c, 0x00000218, 0x0000000d, 
    0x00000224, 0x00000016, 0x00000230, 0x00000017, 0x00000240, 0x00000018, 
    0x00000250, 0x00000019, 0x00000260, 0x00000020, 0x0000026c, 0x00000021, 
    0x0000027c, 0x00000022, 0x0000028c, 0x00000023, 0x0000029c, 0x00000024, 
    0x000002ac, 0x0000003a, 0x000002b8, 0x0000003f, 0x000002c8, 0x00000041, 
    0x000002d8, 0x00000042, 0x000002e4, 0x0000004a, 0x000002f4, 0x0000004c, 
    0x00000304, 0x0000005e, 0x00000318, 0x0000005f, 0x00000328, 0x00000060, 
    0x00000338, 0x00000061, 0x00000348, 0x00000062, 0x00000358, 0x00000063, 
    0x00000368, 0x00000064, 0x00000378, 0x00000065, 0x00000388, 0x00000066, 
    0x00000398, 0x0000006d, 0x000003a8, 0x00000074, 0x000003b8, 0x00000075, 
    0x000003c4, 0x00000076, 0x000003d0, 0x0000007e, 0x000003dc, 0x58443344, 
    0x68532039, 0x72656461, 0x73734120, 0x6c626d65, 0xab007265, 0x0000001f, 
    0x80000000, 0x900f0000, 0x0000001f, 0x80000003, 0x900f0003, 0x0000001f, 
    0x80000005, 0x900f0007, 0x0000001f, 0x80000006, 0x900f000b, 0x0000001f, 
    0x80000007, 0x900f000c, 0x00000009, 0x80010000, 0x90e40000, 0xa0e4002a, 
    0x00000009, 0x80020000, 0x90e40000, 0xa0e4002b, 0x00000009, 0x80040000, 
    0x90e40000, 0xa0e4002c, 0x00000001, 0x80080000, 0xa0550000, 0x00000009, 
    0x80010001, 0x80e40000, 0xa0e40008, 0x00000009, 0x80020001, 0x80e40000, 
    0xa0e40009, 0x00000009, 0x80040001, 0x80e40000, 0xa0e4000a, 0x00000009, 
    0x80080001, 0x80e40000, 0xa0e4000b, 0x00000001, 0xc00f0000, 0x80e40001, 
    0x00000002, 0x80030002, 0xa0ab0002, 0x81aa0000, 0x0000000b, 0x80010002, 
    0x80000002, 0xa0000000, 0x00000006, 0x80040002, 0x80550002, 0x00000005, 
    0x80080002, 0x80000002, 0x80aa0002, 0x00000005, 0x80080002, 0x80ff0002, 
    0x80aa0001, 0x00000004, 0xc00f0001, 0x81ff0002, 0xa0ff0010, 0xa0550010, 
    0x00000008, 0xe0010001, 0x90e4000b, 0xa0e4002a, 0x00000008, 0xe0020001, 
    0x90e4000b, 0xa0e4002b, 0x00000008, 0xe0040001, 0x90e4000b, 0xa0e4002c, 
    0x00000008, 0xe0010002, 0x90e4000c, 0xa0e4002a, 0x00000008, 0xe0020002, 
    0x90e4000c, 0xa0e4002b, 0x00000008, 0xe0040002, 0x90e4000c, 0xa0e4002c, 
    0x00000008, 0xe0010003, 0x90e40003, 0xa0e4002a, 0x00000008, 0xe0020003, 
    0x90e40003, 0xa0e4002b, 0x00000008, 0xe0040003, 0x90e40003, 0xa0e4002c, 
    0x00000002, 0x800f0001, 0xa0e40002, 0x81e40000, 0x00000001, 0xe0080001, 
    0x80000001, 0x00000001, 0xe0080002, 0x80550001, 0x00000001, 0xe0080003, 
    0x80aa0001, 0x00000001, 0xe00f0000, 0x90e40007, 0x0000ffff
};
static PrecompiledShaderByteCode_t BaseTimesLightmapWet_vertex_shaders[] = {
{ 	vertexShader_BaseTimesLightmapWet_none_none_none_none_0_rangefog, sizeof( 	vertexShader_BaseTimesLightmapWet_none_none_none_none_0_rangefog ) },
{ 	vertexShader_BaseTimesLightmapWet_none_none_none_none_0_heightfog, sizeof( 	vertexShader_BaseTimesLightmapWet_none_none_none_none_0_heightfog ) },
};
struct BaseTimesLightmapWet_VertexShader_t : public PrecompiledShader_t
{
	BaseTimesLightmapWet_VertexShader_t()
	{
		m_nFlags = 0;
		m_nFlags |= SHADER_USES_HEIGHT_FOG;
		m_nFlags |= SHADER_USES_MODEL_MATRIX;
		m_pByteCode = BaseTimesLightmapWet_vertex_shaders;
		m_pName = "BaseTimesLightmapWet";
		m_nShaderCount = 2;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static BaseTimesLightmapWet_VertexShader_t BaseTimesLightmapWet_VertexShaderInstance;
