class water_vs20_Index
{
public:
	water_vs20_Index()
	{
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
#endif // _DEBUG
		return 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /Dmain=main /Emain /Tvs_2_0 /nologo /Fhtmpshader.h Water_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cModelViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cModelViewProj         c4       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Water_vs20_0[] =
{
    0xfffe0200, 0x004ffffe, 0x42415443, 0x0000001c, 0x00000113, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x0000010c, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00040002, 0x00000004, 0x000000fc, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x646f4d63, 0x69566c65, 0x72507765, 0xab006a6f, 
    0x00030003, 0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 
    0x0200001f, 0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 
    0x0200001f, 0x80000006, 0x900f0003, 0x0200001f, 0x80000007, 0x900f0004, 
    0x03000009, 0x80010000, 0x90e40000, 0xa0e40004, 0x03000009, 0x80020000, 
    0x90e40000, 0xa0e40005, 0x03000009, 0x80080001, 0x90e40000, 0xa0e40007, 
    0x03000002, 0x80030001, 0x80e40000, 0x80ff0001, 0x02000001, 0x80040000, 
    0x81550000, 0x03000005, 0xe0030002, 0x80e40001, 0xa0ff0000, 0x03000002, 
    0x800c0000, 0x80240000, 0x80ff0001, 0x02000001, 0xc0030000, 0x80e40000, 
    0x03000005, 0xe00c0002, 0x80e40000, 0xa0ff0000, 0x03000009, 0x80020001, 
    0x90e40000, 0xa0e40006, 0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 
    0x03000009, 0x80020000, 0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 
    0x90e40000, 0xa0e4002c, 0x04000004, 0xc00f0001, 0x81550001, 0xa0ff0010, 
    0xa0000010, 0x03000002, 0x80070000, 0x81e40000, 0xa0e40002, 0x02000001, 
    0xc0040000, 0x80550001, 0x03000008, 0xe0010001, 0x80e40000, 0x90e40003, 
    0x03000008, 0xe0020001, 0x80e40000, 0x90e40004, 0x03000008, 0xe0040001, 
    0x80e40000, 0x90e40001, 0x03000009, 0xe0010000, 0x90e40002, 0xa0e4005b, 
    0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 0xc0080000, 
    0x80ff0001, 0x02000001, 0xe0010003, 0x80ff0001, 0x0000ffff
};
static PrecompiledShaderByteCode_t Water_vs20_pixel_shaders[1] = 
{
	{ pixelShader_Water_vs20_0, sizeof( pixelShader_Water_vs20_0 ) },
};
struct Water_vs20PixelShader_t : public PrecompiledShader_t
{
	Water_vs20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x0;
		m_pByteCode = Water_vs20_pixel_shaders;
		m_nShaderCount = 1;
		m_pName = "Water_vs20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static Water_vs20PixelShader_t Water_vs20_PixelShaderInstance;
#endif // DEFINE_SHADERS
