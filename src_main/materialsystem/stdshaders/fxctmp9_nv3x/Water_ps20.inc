class water_ps20_Index
{
private:
	int m_nREFLECT;
#ifdef _DEBUG
	bool m_bREFLECT;
#endif
public:
	void SetREFLECT( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nREFLECT = i;
#ifdef _DEBUG
		m_bREFLECT = true;
#endif
	}
	void SetREFLECT( bool i )
	{
		m_nREFLECT = i ? 1 : 0;
#ifdef _DEBUG
		m_bREFLECT = true;
#endif
	}
private:
	int m_nREFRACT;
#ifdef _DEBUG
	bool m_bREFRACT;
#endif
public:
	void SetREFRACT( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nREFRACT = i;
#ifdef _DEBUG
		m_bREFRACT = true;
#endif
	}
	void SetREFRACT( bool i )
	{
		m_nREFRACT = i ? 1 : 0;
#ifdef _DEBUG
		m_bREFRACT = true;
#endif
	}
public:
	water_ps20_Index()
	{
#ifdef _DEBUG
		m_bREFLECT = false;
#endif // _DEBUG
		m_nREFLECT = 0;
#ifdef _DEBUG
		m_bREFRACT = false;
#endif // _DEBUG
		m_nREFRACT = 0;
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
		bool bAllStaticVarsDefined = m_bREFLECT && m_bREFRACT;
		bool bNoStaticVarsDefined = !m_bREFLECT && !m_bREFRACT;
		Assert( bAllStaticVarsDefined != bNoStaticVarsDefined );
#endif // _DEBUG
		return ( 1 * m_nREFLECT ) + ( 2 * m_nREFRACT ) + 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DREFLECT=0 /DREFRACT=0 /Dmain=main /Emain /Tps_2_a /nologo
//    /Fhtmpshader.h Water_ps20.fxc
//

static unsigned int pixelShader_Water_ps20_0[] =
{
    0xffff0201, 0x0013fffe, 0x42415443, 0x0000001c, 0x00000023, 0xffff0201, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x325f7370, 0x4d00615f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x00000000, 
    0x00000000, 0x00000000, 0x00000000, 0x02000001, 0x800f0000, 0xa0000000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DREFLECT=1 /DREFRACT=0 /Dmain=main /Emain /Tps_2_a /nologo
//    /Fhtmpshader.h Water_ps20.fxc
//
//
// Parameters:
//
//   sampler2D NormalSampler;
//   sampler2D ReflectSampler;
//   float4 g_ReflectRefractScale;
//   float4 vReflectTint;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   vReflectTint          c4       1
//   g_ReflectRefractScale c5       1
//   NormalSampler         s3       1
//   ReflectSampler        s4       1
//


static unsigned int pixelShader_Water_ps20_1[] =
{
    0xffff0201, 0x0040fffe, 0x42415443, 0x0000001c, 0x000000d8, 0xffff0201, 
    0x00000004, 0x0000001c, 0x00000000, 0x000000d1, 0x0000006c, 0x00030003, 
    0x00000001, 0x0000007c, 0x00000000, 0x0000008c, 0x00040003, 0x00000001, 
    0x0000007c, 0x00000000, 0x0000009b, 0x00050002, 0x00000001, 0x000000b4, 
    0x00000000, 0x000000c4, 0x00040002, 0x00000001, 0x000000b4, 0x00000000, 
    0x6d726f4e, 0x61536c61, 0x656c706d, 0xabab0072, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x6c666552, 0x53746365, 0x6c706d61, 0x67007265, 
    0x6665525f, 0x7463656c, 0x72666552, 0x53746361, 0x656c6163, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x66655276, 0x7463656c, 
    0x746e6954, 0x5f737000, 0x00615f32, 0x7263694d, 0x666f736f, 0x52282074, 
    0x33442029, 0x20395844, 0x64616853, 0x43207265, 0x69706d6f, 0x0072656c, 
    0x05000051, 0xa00f0000, 0x40000000, 0xbf800000, 0x00000000, 0x00000000, 
    0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0010003, 0x0200001f, 0x90000000, 0xa00f0803, 
    0x0200001f, 0x90000000, 0xa00f0804, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40803, 0x04000004, 0x80030001, 0xa0000000, 0x80e40000, 0xa0550000, 
    0x02000006, 0x80040000, 0xb0000003, 0x03000005, 0x80030000, 0x80ff0000, 
    0x80e40001, 0x03000005, 0x80030001, 0x80aa0000, 0xb0e40002, 0x04000004, 
    0x80030000, 0x80e40000, 0xa0e40005, 0x80e40001, 0x03000042, 0x800f0000, 
    0x80e40000, 0xa0e40804, 0x03000005, 0x800f0000, 0x80e40000, 0xa0e40004, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DREFLECT=0 /DREFRACT=1 /Dmain=main /Emain /Tps_2_a /nologo
//    /Fhtmpshader.h Water_ps20.fxc
//
//
// Parameters:
//
//   sampler2D NormalSampler;
//   sampler2D RefractSampler;
//   float4 g_ReflectRefractScale;
//   float4 vRefractTint;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   vRefractTint          c1       1
//   g_ReflectRefractScale c5       1
//   RefractSampler        s2       1
//   NormalSampler         s3       1
//


static unsigned int pixelShader_Water_ps20_2[] =
{
    0xffff0201, 0x0040fffe, 0x42415443, 0x0000001c, 0x000000d8, 0xffff0201, 
    0x00000004, 0x0000001c, 0x00000000, 0x000000d1, 0x0000006c, 0x00030003, 
    0x00000001, 0x0000007c, 0x00000000, 0x0000008c, 0x00020003, 0x00000001, 
    0x0000007c, 0x00000000, 0x0000009b, 0x00050002, 0x00000001, 0x000000b4, 
    0x00000000, 0x000000c4, 0x00010002, 0x00000001, 0x000000b4, 0x00000000, 
    0x6d726f4e, 0x61536c61, 0x656c706d, 0xabab0072, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x72666552, 0x53746361, 0x6c706d61, 0x67007265, 
    0x6665525f, 0x7463656c, 0x72666552, 0x53746361, 0x656c6163, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x66655276, 0x74636172, 
    0x746e6954, 0x5f737000, 0x00615f32, 0x7263694d, 0x666f736f, 0x52282074, 
    0x33442029, 0x20395844, 0x64616853, 0x43207265, 0x69706d6f, 0x0072656c, 
    0x05000051, 0xa00f0000, 0x40000000, 0xbf800000, 0x00000000, 0x00000000, 
    0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb00f0002, 
    0x0200001f, 0x80000000, 0xb0010003, 0x0200001f, 0x90000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40803, 0x04000004, 0x80030001, 0xa0000000, 0x80e40000, 0xa0550000, 
    0x02000006, 0x80040000, 0xb0000003, 0x03000005, 0x80030000, 0x80ff0000, 
    0x80e40001, 0x03000005, 0x80030001, 0x80aa0000, 0xb0eb0002, 0x04000004, 
    0x80030000, 0x80e40000, 0xa0eb0005, 0x80e40001, 0x03000042, 0x800f0000, 
    0x80e40000, 0xa0e40802, 0x03000005, 0x800f0000, 0x80e40000, 0xa0e40001, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DREFLECT=1 /DREFRACT=1 /Dmain=main /Emain /Tps_2_a /nologo
//    /Fhtmpshader.h Water_ps20.fxc
//
//
// Parameters:
//
//   sampler2D NormalSampler;
//   samplerCUBE NormalizeSampler;
//   sampler2D ReflectSampler;
//   sampler2D RefractSampler;
//   float4 g_ReflectRefractScale;
//   float4 vReflectTint;
//   float4 vRefractTint;
//
//
// Registers:
//
//   Name                  Reg   Size
//   --------------------- ----- ----
//   vRefractTint          c1       1
//   vReflectTint          c4       1
//   g_ReflectRefractScale c5       1
//   RefractSampler        s2       1
//   NormalSampler         s3       1
//   ReflectSampler        s4       1
//   NormalizeSampler      s6       1
//


static unsigned int pixelShader_Water_ps20_3[] =
{
    0xffff0201, 0x005ffffe, 0x42415443, 0x0000001c, 0x00000151, 0xffff0201, 
    0x00000007, 0x0000001c, 0x00000000, 0x0000014a, 0x000000a8, 0x00030003, 
    0x00000001, 0x000000b8, 0x00000000, 0x000000c8, 0x00060003, 0x00000001, 
    0x000000dc, 0x00000000, 0x000000ec, 0x00040003, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000fb, 0x00020003, 0x00000001, 0x000000b8, 0x00000000, 
    0x0000010a, 0x00050002, 0x00000001, 0x00000120, 0x00000000, 0x00000130, 
    0x00040002, 0x00000001, 0x00000120, 0x00000000, 0x0000013d, 0x00010002, 
    0x00000001, 0x00000120, 0x00000000, 0x6d726f4e, 0x61536c61, 0x656c706d, 
    0xabab0072, 0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0xababab00, 0x000e0004, 0x00010001, 
    0x00000001, 0x00000000, 0x6c666552, 0x53746365, 0x6c706d61, 0x52007265, 
    0x61726665, 0x61537463, 0x656c706d, 0x5f670072, 0x6c666552, 0x52746365, 
    0x61726665, 0x63537463, 0x00656c61, 0x00030001, 0x00040001, 0x00000001, 
    0x00000000, 0x66655276, 0x7463656c, 0x746e6954, 0x65527600, 0x63617266, 
    0x6e695474, 0x73700074, 0x615f325f, 0x63694d00, 0x6f736f72, 0x28207466, 
    0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x706d6f43, 0x72656c69, 
    0xababab00, 0x05000051, 0xa00f0000, 0x40000000, 0xbf800000, 0x3f800000, 
    0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0070001, 0x0200001f, 0x80000000, 0xb00f0002, 0x0200001f, 0x80000000, 
    0xb0010003, 0x0200001f, 0x90000000, 0xa00f0802, 0x0200001f, 0x90000000, 
    0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 0x0200001f, 0x98000000, 
    0xa00f0806, 0x02000006, 0x80080001, 0xb0000003, 0x03000042, 0x800f0000, 
    0xb0e40000, 0xa0e40803, 0x04000004, 0x80070003, 0xa0000000, 0x80e40000, 
    0xa0550000, 0x03000005, 0x800f0001, 0x80ff0001, 0xb0e40002, 0x03000005, 
    0x800f0000, 0x80ff0000, 0x80140003, 0x04000004, 0x800f0001, 0x804b0000, 
    0xa04b0005, 0x804b0001, 0x02000001, 0x80030004, 0x80ee0001, 0x03000042, 
    0x800f0000, 0x80e40004, 0xa0e40804, 0x03000042, 0x800f0001, 0x80e40001, 
    0xa0e40802, 0x03000042, 0x800f0002, 0xb0e40001, 0xa0e40806, 0x04000004, 
    0x80070002, 0xa0000000, 0x80e40002, 0xa0550000, 0x03000008, 0x80180002, 
    0x80e40002, 0x80e40003, 0x03000002, 0x80080002, 0x81ff0002, 0xa0aa0000, 
    0x03000005, 0x80040002, 0x80ff0002, 0x80ff0002, 0x03000005, 0x800f0001, 
    0x80e40001, 0xa0e40001, 0x03000005, 0x80080003, 0x80aa0002, 0x80aa0002, 
    0x04000004, 0x800f0000, 0x80e40000, 0xa0e40004, 0x81e40001, 0x03000005, 
    0x80080002, 0x80ff0002, 0x80ff0003, 0x04000004, 0x800f0000, 0x80ff0002, 
    0x80e40000, 0x80e40001, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
static PrecompiledShaderByteCode_t Water_ps20_pixel_shaders[4] = 
{
	{ pixelShader_Water_ps20_0, sizeof( pixelShader_Water_ps20_0 ) },
	{ pixelShader_Water_ps20_1, sizeof( pixelShader_Water_ps20_1 ) },
	{ pixelShader_Water_ps20_2, sizeof( pixelShader_Water_ps20_2 ) },
	{ pixelShader_Water_ps20_3, sizeof( pixelShader_Water_ps20_3 ) },
};
struct Water_ps20PixelShader_t : public PrecompiledShader_t
{
	Water_ps20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x0;
		m_pByteCode = Water_ps20_pixel_shaders;
		m_nShaderCount = 4;
		m_pName = "Water_ps20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_PIXEL_SHADER, this );
	}
};
static Water_ps20PixelShader_t Water_ps20_PixelShaderInstance;
#endif // DEFINE_SHADERS
