class shatteredglass_ps20_Index
{
private:
	int m_nCUBEMAP;
#ifdef _DEBUG
	bool m_bCUBEMAP;
#endif
public:
	void SetCUBEMAP( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nCUBEMAP = i;
#ifdef _DEBUG
		m_bCUBEMAP = true;
#endif
	}
	void SetCUBEMAP( bool i )
	{
		m_nCUBEMAP = i ? 1 : 0;
#ifdef _DEBUG
		m_bCUBEMAP = true;
#endif
	}
private:
	int m_nVERTEXCOLOR;
#ifdef _DEBUG
	bool m_bVERTEXCOLOR;
#endif
public:
	void SetVERTEXCOLOR( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nVERTEXCOLOR = i;
#ifdef _DEBUG
		m_bVERTEXCOLOR = true;
#endif
	}
	void SetVERTEXCOLOR( bool i )
	{
		m_nVERTEXCOLOR = i ? 1 : 0;
#ifdef _DEBUG
		m_bVERTEXCOLOR = true;
#endif
	}
private:
	int m_nENVMAPMASK;
#ifdef _DEBUG
	bool m_bENVMAPMASK;
#endif
public:
	void SetENVMAPMASK( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nENVMAPMASK = i;
#ifdef _DEBUG
		m_bENVMAPMASK = true;
#endif
	}
	void SetENVMAPMASK( bool i )
	{
		m_nENVMAPMASK = i ? 1 : 0;
#ifdef _DEBUG
		m_bENVMAPMASK = true;
#endif
	}
private:
	int m_nBASEALPHAENVMAPMASK;
#ifdef _DEBUG
	bool m_bBASEALPHAENVMAPMASK;
#endif
public:
	void SetBASEALPHAENVMAPMASK( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nBASEALPHAENVMAPMASK = i;
#ifdef _DEBUG
		m_bBASEALPHAENVMAPMASK = true;
#endif
	}
	void SetBASEALPHAENVMAPMASK( bool i )
	{
		m_nBASEALPHAENVMAPMASK = i ? 1 : 0;
#ifdef _DEBUG
		m_bBASEALPHAENVMAPMASK = true;
#endif
	}
private:
	int m_nAACLAMP;
#ifdef _DEBUG
	bool m_bAACLAMP;
#endif
public:
	void SetAACLAMP( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nAACLAMP = i;
#ifdef _DEBUG
		m_bAACLAMP = true;
#endif
	}
	void SetAACLAMP( bool i )
	{
		m_nAACLAMP = i ? 1 : 0;
#ifdef _DEBUG
		m_bAACLAMP = true;
#endif
	}
public:
	shatteredglass_ps20_Index()
	{
#ifdef _DEBUG
		m_bCUBEMAP = false;
#endif // _DEBUG
		m_nCUBEMAP = 0;
#ifdef _DEBUG
		m_bVERTEXCOLOR = false;
#endif // _DEBUG
		m_nVERTEXCOLOR = 0;
#ifdef _DEBUG
		m_bENVMAPMASK = false;
#endif // _DEBUG
		m_nENVMAPMASK = 0;
#ifdef _DEBUG
		m_bBASEALPHAENVMAPMASK = false;
#endif // _DEBUG
		m_nBASEALPHAENVMAPMASK = 0;
#ifdef _DEBUG
		m_bAACLAMP = false;
#endif // _DEBUG
		m_nAACLAMP = 0;
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
		bool bAllStaticVarsDefined = m_bCUBEMAP && m_bVERTEXCOLOR && m_bENVMAPMASK && m_bBASEALPHAENVMAPMASK && m_bAACLAMP;
		bool bNoStaticVarsDefined = !m_bCUBEMAP && !m_bVERTEXCOLOR && !m_bENVMAPMASK && !m_bBASEALPHAENVMAPMASK && !m_bAACLAMP;
		Assert( bAllStaticVarsDefined != bNoStaticVarsDefined );
#endif // _DEBUG
		return ( 1 * m_nCUBEMAP ) + ( 2 * m_nVERTEXCOLOR ) + ( 4 * m_nENVMAPMASK ) + ( 8 * m_nBASEALPHAENVMAPMASK ) + ( 16 * m_nAACLAMP ) + 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_0[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000005, 0x80080000, 
    0x80ff0001, 0x80ff0000, 0x03000005, 0x80070000, 0x80e40003, 0x80e40000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_1[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 
    0xbf800000, 0x3f800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 
    0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 
    0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 
    0xa0e40806, 0x04000004, 0x80070000, 0xa0000005, 0x80e40000, 0xa0550005, 
    0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 0x80080000, 
    0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 
    0x03000002, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000002, 0x80080002, 
    0x81ff0000, 0xa0aa0005, 0x04000004, 0x80070001, 0x80ff0001, 0xb0e40005, 
    0x81e40000, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000042, 
    0x800f0001, 0x80e40001, 0xa0e40802, 0x03000005, 0x80070002, 0x80e40001, 
    0xa0e40000, 0x04000004, 0x80070001, 0x80e40002, 0x80e40002, 0x81e40002, 
    0x04000004, 0x80070002, 0xa0e40002, 0x80e40001, 0x80e40002, 0x03000008, 
    0x80080003, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0002, 
    0x80ff0002, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40002, 0x80ff0003, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000005, 0x80080000, 
    0x80ff0002, 0x80ff0001, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080000, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40001, 
    0x80ff0000, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 
    0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x03000005, 0x80080000, 0x80ff0001, 0x80ff0000, 0x04000004, 0x80070000, 
    0x80e40000, 0x80e40003, 0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_2[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x03000005, 0x800f0000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_3[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 
    0xbf800000, 0x3f800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 0xa00f0800, 
    0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x98000000, 0xa00f0806, 
    0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 
    0xa0000005, 0x80e40000, 0xa0550005, 0x03000008, 0x80080001, 0xb0e40005, 
    0xb0e40005, 0x03000008, 0x80080000, 0xb0e40005, 0x80e40000, 0x03000005, 
    0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 0x80ff0000, 
    0x80ff0000, 0x03000002, 0x80080002, 0x81ff0000, 0xa0aa0005, 0x04000004, 
    0x80070001, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0000, 
    0xb0e40002, 0xa0e40801, 0x03000042, 0x800f0001, 0x80e40001, 0xa0e40802, 
    0x03000005, 0x80070002, 0x80e40001, 0xa0e40000, 0x04000004, 0x80070001, 
    0x80e40002, 0x80e40002, 0x81e40002, 0x04000004, 0x80070002, 0xa0e40002, 
    0x80e40001, 0x80e40002, 0x03000005, 0x80080000, 0x80ff0002, 0x80ff0002, 
    0x03000008, 0x80080003, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080001, 
    0x80ff0000, 0x80ff0000, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40002, 
    0x80ff0003, 0x03000005, 0x80080000, 0x80ff0002, 0x80ff0001, 0x04000004, 
    0x80080000, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40001, 0x80ff0000, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x800f0000, 0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 
    0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 
    0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x04000004, 
    0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_4[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000005, 0x80080000, 
    0x80ff0001, 0x80ff0000, 0x03000005, 0x80070000, 0x80e40003, 0x80e40000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_5[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 0xbf800000, 0x3f800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 
    0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 
    0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 0x0200001f, 0x98000000, 
    0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 
    0x80070000, 0xa0000005, 0x80e40000, 0xa0550005, 0x03000008, 0x80080001, 
    0xb0e40005, 0xb0e40005, 0x03000008, 0x80080002, 0xb0e40005, 0x80e40000, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 
    0x80ff0002, 0x80ff0002, 0x04000004, 0x80070000, 0x80ff0001, 0xb0e40005, 
    0x81e40000, 0x03000042, 0x800f0001, 0xb0e40003, 0xa0e40804, 0x03000042, 
    0x800f0000, 0x80e40000, 0xa0e40802, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x03000005, 0x80070001, 0x80e40000, 0xa0e40000, 0x03000002, 
    0x80080000, 0x81ff0002, 0xa0aa0005, 0x04000004, 0x80070000, 0x80e40001, 
    0x80e40001, 0x81e40001, 0x04000004, 0x80070000, 0xa0e40002, 0x80e40000, 
    0x80e40001, 0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000008, 
    0x80080003, 0x80e40000, 0xa0ff0005, 0x03000005, 0x80080001, 0x80ff0001, 
    0x80ff0001, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40000, 0x80ff0003, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0001, 0x03000042, 0x800f0000, 
    0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080000, 0x80ff0001, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40001, 
    0x80ff0000, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 
    0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x03000005, 0x80080000, 0x80ff0001, 0x80ff0000, 0x04000004, 0x80070000, 
    0x80e40000, 0x80e40003, 0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_6[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x03000005, 0x800f0000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_7[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 0xbf800000, 0x3f800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 
    0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 
    0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x90000000, 
    0xa00f0804, 0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 
    0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 0xa0000005, 0x80e40000, 
    0xa0550005, 0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 
    0x80080002, 0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080001, 0x80ff0002, 0x80ff0002, 0x04000004, 
    0x80070000, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0001, 
    0xb0e40003, 0xa0e40804, 0x03000042, 0x800f0000, 0x80e40000, 0xa0e40802, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000002, 0x80080000, 
    0x81ff0002, 0xa0aa0005, 0x03000005, 0x80070001, 0x80e40000, 0xa0e40000, 
    0x04000004, 0x80070000, 0x80e40001, 0x80e40001, 0x81e40001, 0x03000005, 
    0x80080001, 0x80ff0000, 0x80ff0000, 0x04000004, 0x80070000, 0xa0e40002, 
    0x80e40000, 0x80e40001, 0x03000005, 0x80080001, 0x80ff0001, 0x80ff0001, 
    0x03000008, 0x80080003, 0x80e40000, 0xa0ff0005, 0x03000005, 0x80080000, 
    0x80ff0000, 0x80ff0001, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40000, 
    0x80ff0003, 0x04000004, 0x80080002, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 
    0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40001, 0x80ff0002, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x800f0000, 0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 
    0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 
    0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x04000004, 
    0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_8[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40000, 0x80e40001, 0x03000005, 0x80070000, 
    0x80e40003, 0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_9[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 
    0x40000000, 0xbf800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 
    0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 
    0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 
    0xa0e40806, 0x04000004, 0x80070000, 0xa0550005, 0x80e40000, 0xa0aa0005, 
    0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 0x80080002, 
    0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 
    0x03000002, 0x80080001, 0x80ff0002, 0x80ff0002, 0x04000004, 0x80070000, 
    0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0001, 0xb0e40000, 
    0xa0e40800, 0x03000042, 0x800f0000, 0x80e40000, 0xa0e40802, 0x03000002, 
    0x80080001, 0x81ff0001, 0xa0000005, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080000, 0x81ff0002, 0xa0000005, 0x03000005, 
    0x80070003, 0x80e40000, 0xa0e40000, 0x04000004, 0x80070000, 0x80e40003, 
    0x80e40003, 0x81e40003, 0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 
    0x04000004, 0x80070002, 0xa0e40002, 0x80e40000, 0x80e40003, 0x03000005, 
    0x80080003, 0x80ff0001, 0x80ff0001, 0x03000008, 0x80080001, 0x80e40002, 
    0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0000, 0x80ff0003, 0x04000012, 
    0x80070000, 0xa0e40003, 0x80e40002, 0x80ff0001, 0x04000004, 0x80080001, 
    0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070004, 0x80e40000, 
    0x80ff0001, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 0x03000042, 
    0x800f0002, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070002, 0x80e40002, 
    0xa0e40001, 0x03000005, 0x80070002, 0x80e40002, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40002, 0xa0550006, 0x03000005, 0x80070000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40003, 
    0x80e40004, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_10[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 
    0x80e40000, 0x80e40001, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_11[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 
    0x40000000, 0xbf800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 0xa00f0800, 
    0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x98000000, 0xa00f0806, 
    0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 
    0xa0550005, 0x80e40000, 0xa0aa0005, 0x03000008, 0x80080001, 0xb0e40005, 
    0xb0e40005, 0x03000008, 0x80080002, 0xb0e40005, 0x80e40000, 0x03000005, 
    0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 0x80ff0002, 
    0x80ff0002, 0x04000004, 0x80070000, 0x80ff0001, 0xb0e40005, 0x81e40000, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000042, 0x800f0000, 
    0x80e40000, 0xa0e40802, 0x03000002, 0x80080001, 0x81ff0001, 0xa0000005, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080000, 
    0x81ff0002, 0xa0000005, 0x03000005, 0x80070003, 0x80e40000, 0xa0e40000, 
    0x04000004, 0x80070000, 0x80e40003, 0x80e40003, 0x81e40003, 0x03000005, 
    0x80080001, 0x80ff0000, 0x80ff0000, 0x04000004, 0x80070002, 0xa0e40002, 
    0x80e40000, 0x80e40003, 0x03000005, 0x80080003, 0x80ff0001, 0x80ff0001, 
    0x03000008, 0x80080001, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080000, 
    0x80ff0000, 0x80ff0003, 0x04000012, 0x80070000, 0xa0e40003, 0x80e40002, 
    0x80ff0001, 0x04000004, 0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 
    0x03000005, 0x80070003, 0x80e40000, 0x80ff0001, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0002, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070002, 0x80e40002, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40002, 0xa0000006, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 0xa0550006, 0x03000005, 
    0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 
    0x90ff0000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40001, 0x80e40003, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_12[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40000, 0x80e40001, 0x03000005, 0x80070000, 
    0x80e40003, 0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_13[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 0x40000000, 0xbf800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 
    0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 
    0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 0x0200001f, 0x98000000, 
    0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 
    0x80070000, 0xa0550005, 0x80e40000, 0xa0aa0005, 0x03000008, 0x80080001, 
    0xb0e40005, 0xb0e40005, 0x03000008, 0x80080000, 0xb0e40005, 0x80e40000, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 
    0x80ff0000, 0x80ff0000, 0x03000002, 0x80080004, 0x81ff0000, 0xa0000005, 
    0x04000004, 0x80070002, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000042, 0x800f0001, 0xb0e40000, 
    0xa0e40800, 0x03000042, 0x800f0003, 0xb0e40003, 0xa0e40804, 0x03000042, 
    0x800f0002, 0x80e40002, 0xa0e40802, 0x03000002, 0x80080000, 0x81ff0001, 
    0xa0000005, 0x03000005, 0x80070003, 0x80e40003, 0x80ff0000, 0x03000005, 
    0x80070002, 0x80e40002, 0x80e40003, 0x03000005, 0x80070003, 0x80e40002, 
    0xa0e40000, 0x04000004, 0x80070002, 0x80e40003, 0x80e40003, 0x81e40003, 
    0x04000004, 0x80070003, 0xa0e40002, 0x80e40002, 0x80e40003, 0x03000008, 
    0x80040004, 0x80e40003, 0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0004, 
    0x80ff0004, 0x04000012, 0x80070002, 0xa0e40003, 0x80e40003, 0x80aa0004, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000005, 0x80080000, 
    0x80ff0004, 0x80ff0001, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40002, 
    0x80ff0001, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 0x03000005, 0x80070000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40003, 
    0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_14[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 
    0x80e40000, 0x80e40001, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=0 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_15[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 0x40000000, 0xbf800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 
    0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 
    0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x90000000, 
    0xa00f0804, 0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 
    0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 0xa0550005, 0x80e40000, 
    0xa0aa0005, 0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 
    0x80080000, 0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000002, 
    0x80080004, 0x81ff0000, 0xa0000005, 0x04000004, 0x80070002, 0x80ff0001, 
    0xb0e40005, 0x81e40000, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000042, 0x800f0003, 
    0xb0e40003, 0xa0e40804, 0x03000042, 0x800f0002, 0x80e40002, 0xa0e40802, 
    0x03000002, 0x80080000, 0x81ff0001, 0xa0000005, 0x03000005, 0x80070003, 
    0x80e40003, 0x80ff0000, 0x03000005, 0x80070002, 0x80e40002, 0x80e40003, 
    0x03000005, 0x80070003, 0x80e40002, 0xa0e40000, 0x04000004, 0x80070002, 
    0x80e40003, 0x80e40003, 0x81e40003, 0x04000004, 0x80070003, 0xa0e40002, 
    0x80e40002, 0x80e40003, 0x03000005, 0x80080001, 0x80ff0004, 0x80ff0004, 
    0x03000008, 0x80080000, 0x80e40003, 0xa0ff0005, 0x03000005, 0x80080001, 
    0x80ff0001, 0x80ff0001, 0x04000012, 0x80070002, 0xa0e40003, 0x80e40003, 
    0x80ff0000, 0x03000005, 0x80080000, 0x80ff0004, 0x80ff0001, 0x04000004, 
    0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40002, 0x80ff0001, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x04000004, 0x80070001, 0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 
    0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 
    0x90ff0000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_16[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000005, 0x80080000, 
    0x80ff0001, 0x80ff0000, 0x03000005, 0x80070000, 0x80e40003, 0x80e40000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_17[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 
    0xbf800000, 0x3f800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 
    0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 
    0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 
    0xa0e40806, 0x04000004, 0x80070000, 0xa0000005, 0x80e40000, 0xa0550005, 
    0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 0x80080000, 
    0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 
    0x03000002, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000002, 0x80080002, 
    0x81ff0000, 0xa0aa0005, 0x04000004, 0x80070001, 0x80ff0001, 0xb0e40005, 
    0x81e40000, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000042, 
    0x800f0001, 0x80e40001, 0xa0e40802, 0x03000005, 0x80070002, 0x80e40001, 
    0xa0e40000, 0x04000004, 0x80070001, 0x80e40002, 0x80e40002, 0x81e40002, 
    0x04000004, 0x80070002, 0xa0e40002, 0x80e40001, 0x80e40002, 0x03000008, 
    0x80080003, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0002, 
    0x80ff0002, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40002, 0x80ff0003, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000005, 0x80080000, 
    0x80ff0002, 0x80ff0001, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080000, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40001, 
    0x80ff0000, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 
    0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x03000005, 0x80080000, 0x80ff0001, 0x80ff0000, 0x04000004, 0x80070000, 
    0x80e40000, 0x80e40003, 0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_18[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x03000005, 0x800f0000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_19[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 
    0xbf800000, 0x3f800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 0xa00f0800, 
    0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x98000000, 0xa00f0806, 
    0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 
    0xa0000005, 0x80e40000, 0xa0550005, 0x03000008, 0x80080001, 0xb0e40005, 
    0xb0e40005, 0x03000008, 0x80080000, 0xb0e40005, 0x80e40000, 0x03000005, 
    0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 0x80ff0000, 
    0x80ff0000, 0x03000002, 0x80080002, 0x81ff0000, 0xa0aa0005, 0x04000004, 
    0x80070001, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0000, 
    0xb0e40002, 0xa0e40801, 0x03000042, 0x800f0001, 0x80e40001, 0xa0e40802, 
    0x03000005, 0x80070002, 0x80e40001, 0xa0e40000, 0x04000004, 0x80070001, 
    0x80e40002, 0x80e40002, 0x81e40002, 0x04000004, 0x80070002, 0xa0e40002, 
    0x80e40001, 0x80e40002, 0x03000005, 0x80080000, 0x80ff0002, 0x80ff0002, 
    0x03000008, 0x80080003, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080001, 
    0x80ff0000, 0x80ff0000, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40002, 
    0x80ff0003, 0x03000005, 0x80080000, 0x80ff0002, 0x80ff0001, 0x04000004, 
    0x80080000, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40001, 0x80ff0000, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x800f0000, 0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 
    0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 
    0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x04000004, 
    0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_20[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000005, 0x80080000, 
    0x80ff0001, 0x80ff0000, 0x03000005, 0x80070000, 0x80e40003, 0x80e40000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_21[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 0xbf800000, 0x3f800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 
    0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 
    0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 0x0200001f, 0x98000000, 
    0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 
    0x80070000, 0xa0000005, 0x80e40000, 0xa0550005, 0x03000008, 0x80080001, 
    0xb0e40005, 0xb0e40005, 0x03000008, 0x80080002, 0xb0e40005, 0x80e40000, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 
    0x80ff0002, 0x80ff0002, 0x04000004, 0x80070000, 0x80ff0001, 0xb0e40005, 
    0x81e40000, 0x03000042, 0x800f0001, 0xb0e40003, 0xa0e40804, 0x03000042, 
    0x800f0000, 0x80e40000, 0xa0e40802, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x03000005, 0x80070001, 0x80e40000, 0xa0e40000, 0x03000002, 
    0x80080000, 0x81ff0002, 0xa0aa0005, 0x04000004, 0x80070000, 0x80e40001, 
    0x80e40001, 0x81e40001, 0x04000004, 0x80070000, 0xa0e40002, 0x80e40000, 
    0x80e40001, 0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000008, 
    0x80080003, 0x80e40000, 0xa0ff0005, 0x03000005, 0x80080001, 0x80ff0001, 
    0x80ff0001, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40000, 0x80ff0003, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0001, 0x03000042, 0x800f0000, 
    0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080000, 0x80ff0001, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40001, 
    0x80ff0000, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 
    0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x03000005, 0x80080000, 0x80ff0001, 0x80ff0000, 0x04000004, 0x80070000, 
    0x80e40000, 0x80e40003, 0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_22[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 0x03000005, 0x800f0000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=0
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_23[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x40000000, 0xbf800000, 0x3f800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 
    0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 
    0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x90000000, 
    0xa00f0804, 0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 
    0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 0xa0000005, 0x80e40000, 
    0xa0550005, 0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 
    0x80080002, 0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080001, 0x80ff0002, 0x80ff0002, 0x04000004, 
    0x80070000, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0001, 
    0xb0e40003, 0xa0e40804, 0x03000042, 0x800f0000, 0x80e40000, 0xa0e40802, 
    0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 0x03000002, 0x80080000, 
    0x81ff0002, 0xa0aa0005, 0x03000005, 0x80070001, 0x80e40000, 0xa0e40000, 
    0x04000004, 0x80070000, 0x80e40001, 0x80e40001, 0x81e40001, 0x03000005, 
    0x80080001, 0x80ff0000, 0x80ff0000, 0x04000004, 0x80070000, 0xa0e40002, 
    0x80e40000, 0x80e40001, 0x03000005, 0x80080001, 0x80ff0001, 0x80ff0001, 
    0x03000008, 0x80080003, 0x80e40000, 0xa0ff0005, 0x03000005, 0x80080000, 
    0x80ff0000, 0x80ff0001, 0x04000012, 0x80070001, 0xa0e40003, 0x80e40000, 
    0x80ff0003, 0x04000004, 0x80080002, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 
    0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40001, 0x80ff0002, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0001, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0000, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x800f0000, 0x80e40001, 0x80e40000, 0x04000004, 0x80070001, 
    0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 
    0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 0x90ff0000, 0x04000004, 
    0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_24[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40000, 0x80e40001, 0x03000005, 0x80070000, 
    0x80e40003, 0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_25[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 
    0x40000000, 0xbf800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 
    0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 
    0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 
    0xa0e40806, 0x04000004, 0x80070000, 0xa0550005, 0x80e40000, 0xa0aa0005, 
    0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 0x80080002, 
    0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 
    0x03000002, 0x80080001, 0x80ff0002, 0x80ff0002, 0x04000004, 0x80070000, 
    0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 0x800f0001, 0xb0e40000, 
    0xa0e40800, 0x03000042, 0x800f0000, 0x80e40000, 0xa0e40802, 0x03000002, 
    0x80080001, 0x81ff0001, 0xa0000005, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080000, 0x81ff0002, 0xa0000005, 0x03000005, 
    0x80070003, 0x80e40000, 0xa0e40000, 0x04000004, 0x80070000, 0x80e40003, 
    0x80e40003, 0x81e40003, 0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 
    0x04000004, 0x80070002, 0xa0e40002, 0x80e40000, 0x80e40003, 0x03000005, 
    0x80080003, 0x80ff0001, 0x80ff0001, 0x03000008, 0x80080001, 0x80e40002, 
    0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0000, 0x80ff0003, 0x04000012, 
    0x80070000, 0xa0e40003, 0x80e40002, 0x80ff0001, 0x04000004, 0x80080001, 
    0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070004, 0x80e40000, 
    0x80ff0001, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 0x03000042, 
    0x800f0002, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070002, 0x80e40002, 
    0xa0e40001, 0x03000005, 0x80070002, 0x80e40002, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40002, 0xa0550006, 0x03000005, 0x80070000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40003, 
    0x80e40004, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_26[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 
    0x80e40000, 0x80e40001, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=0 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_27[] =
{
    0xffff0201, 0x008bfffe, 0x42415443, 0x0000001c, 0x00000202, 0xffff0201, 
    0x0000000b, 0x0000001c, 0x00000000, 0x000001fb, 0x000000f8, 0x00000003, 
    0x00000001, 0x0000010c, 0x00000000, 0x0000011c, 0x00030003, 0x00000001, 
    0x0000010c, 0x00000000, 0x0000012a, 0x00020003, 0x00000001, 0x00000138, 
    0x00000000, 0x00000148, 0x00010003, 0x00000001, 0x0000010c, 0x00000000, 
    0x00000158, 0x00060003, 0x00000001, 0x00000138, 0x00000000, 0x00000169, 
    0x00010002, 0x00000001, 0x00000180, 0x00000000, 0x00000190, 0x00020002, 
    0x00000001, 0x00000180, 0x00000000, 0x000001a1, 0x00030002, 0x00000001, 
    0x00000180, 0x00000000, 0x000001b4, 0x00000002, 0x00000001, 0x000001c4, 
    0x00000000, 0x000001d4, 0x00040002, 0x00000001, 0x000001c4, 0x00000000, 
    0x000001e8, 0x00060002, 0x00000001, 0x00000180, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 
    0x70616d76, 0x706d6153, 0x0072656c, 0x000e0004, 0x00010001, 0x00000001, 
    0x00000000, 0x6867694c, 0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 
    0x7a696c61, 0x6d615365, 0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 
    0x616c7564, 0x6e6f6974, 0xababab00, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x6e455f67, 0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 
    0x616d766e, 0x74615370, 0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 
    0x746e6954, 0xababab00, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 
    0x72465f67, 0x656e7365, 0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 
    0x72627265, 0x74686769, 0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 
    0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 0x68532039, 0x72656461, 
    0x6d6f4320, 0x656c6970, 0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 
    0x40000000, 0xbf800000, 0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 0xb0070005, 
    0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 0xa00f0800, 
    0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x98000000, 0xa00f0806, 
    0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 
    0xa0550005, 0x80e40000, 0xa0aa0005, 0x03000008, 0x80080001, 0xb0e40005, 
    0xb0e40005, 0x03000008, 0x80080002, 0xb0e40005, 0x80e40000, 0x03000005, 
    0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 0x80ff0002, 
    0x80ff0002, 0x04000004, 0x80070000, 0x80ff0001, 0xb0e40005, 0x81e40000, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000042, 0x800f0000, 
    0x80e40000, 0xa0e40802, 0x03000002, 0x80080001, 0x81ff0001, 0xa0000005, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080000, 
    0x81ff0002, 0xa0000005, 0x03000005, 0x80070003, 0x80e40000, 0xa0e40000, 
    0x04000004, 0x80070000, 0x80e40003, 0x80e40003, 0x81e40003, 0x03000005, 
    0x80080001, 0x80ff0000, 0x80ff0000, 0x04000004, 0x80070002, 0xa0e40002, 
    0x80e40000, 0x80e40003, 0x03000005, 0x80080003, 0x80ff0001, 0x80ff0001, 
    0x03000008, 0x80080001, 0x80e40002, 0xa0ff0005, 0x03000005, 0x80080000, 
    0x80ff0000, 0x80ff0003, 0x04000012, 0x80070000, 0xa0e40003, 0x80e40002, 
    0x80ff0001, 0x04000004, 0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 
    0x03000005, 0x80070003, 0x80e40000, 0x80ff0001, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0002, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070002, 0x80e40002, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40002, 0xa0000006, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 0xa0550006, 0x03000005, 
    0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 
    0x90ff0000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40001, 0x80e40003, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_28[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 
    0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000005, 0x80070000, 0x80e40000, 
    0xa0e40001, 0x03000005, 0x80070000, 0x80e40000, 0xa0000006, 0x04000004, 
    0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 
    0x03000005, 0x80070000, 0x80e40000, 0x80e40001, 0x03000005, 0x80070000, 
    0x80e40003, 0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=0 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_29[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 0x40000000, 0xbf800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 
    0xa00f0801, 0x0200001f, 0x98000000, 0xa00f0802, 0x0200001f, 0x90000000, 
    0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 0x0200001f, 0x98000000, 
    0xa00f0806, 0x03000042, 0x800f0000, 0xb0e40004, 0xa0e40806, 0x04000004, 
    0x80070000, 0xa0550005, 0x80e40000, 0xa0aa0005, 0x03000008, 0x80080001, 
    0xb0e40005, 0xb0e40005, 0x03000008, 0x80080000, 0xb0e40005, 0x80e40000, 
    0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 0x03000002, 0x80080001, 
    0x80ff0000, 0x80ff0000, 0x03000002, 0x80080004, 0x81ff0000, 0xa0000005, 
    0x04000004, 0x80070002, 0x80ff0001, 0xb0e40005, 0x81e40000, 0x03000042, 
    0x800f0000, 0xb0e40002, 0xa0e40801, 0x03000042, 0x800f0001, 0xb0e40000, 
    0xa0e40800, 0x03000042, 0x800f0003, 0xb0e40003, 0xa0e40804, 0x03000042, 
    0x800f0002, 0x80e40002, 0xa0e40802, 0x03000002, 0x80080000, 0x81ff0001, 
    0xa0000005, 0x03000005, 0x80070003, 0x80e40003, 0x80ff0000, 0x03000005, 
    0x80070002, 0x80e40002, 0x80e40003, 0x03000005, 0x80070003, 0x80e40002, 
    0xa0e40000, 0x04000004, 0x80070002, 0x80e40003, 0x80e40003, 0x81e40003, 
    0x04000004, 0x80070003, 0xa0e40002, 0x80e40002, 0x80e40003, 0x03000008, 
    0x80040004, 0x80e40003, 0xa0ff0005, 0x03000005, 0x80080000, 0x80ff0004, 
    0x80ff0004, 0x04000012, 0x80070002, 0xa0e40003, 0x80e40003, 0x80aa0004, 
    0x03000005, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000005, 0x80080000, 
    0x80ff0004, 0x80ff0001, 0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 
    0x04000004, 0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000006, 0x03000005, 0x80070002, 0x80e40002, 
    0x80ff0001, 0x04000004, 0x80070003, 0xa0aa0006, 0x80e40000, 0xa0550006, 
    0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 0x03000005, 0x80070000, 
    0x80e40001, 0x80e40000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40003, 
    0x80e40002, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=0 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D LightmapSampler;
//   float3 g_DiffuseModulation;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_DiffuseModulation c1       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   DetailSampler       s3       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_30[] =
{
    0xffff0201, 0x004bfffe, 0x42415443, 0x0000001c, 0x00000102, 0xffff0201, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000fb, 0x00000080, 0x00000003, 
    0x00000001, 0x00000094, 0x00000000, 0x000000a4, 0x00030003, 0x00000001, 
    0x00000094, 0x00000000, 0x000000b2, 0x00010003, 0x00000001, 0x00000094, 
    0x00000000, 0x000000c2, 0x00010002, 0x00000001, 0x000000d8, 0x00000000, 
    0x000000e8, 0x00060002, 0x00000001, 0x000000d8, 0x00000000, 0x65736142, 
    0x74786554, 0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 
    0x00000001, 0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x694c0072, 
    0x6d746867, 0x61537061, 0x656c706d, 0x5f670072, 0x66666944, 0x4d657375, 
    0x6c75646f, 0x6f697461, 0xabab006e, 0x00030001, 0x00030001, 0x00000001, 
    0x00000000, 0x764f5f67, 0x72627265, 0x74686769, 0x74636146, 0x7000726f, 
    0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 0x20295228, 0x58443344, 
    0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 0xabab0072, 0x0200001f, 
    0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 
    0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x90000000, 0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 
    0x90000000, 0xa00f0803, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000005, 0x80070000, 0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 
    0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 0xb0e40001, 0xa0e40803, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000005, 0x80070000, 
    0x80e40000, 0x80e40001, 0x04000004, 0x80070001, 0xa0aa0006, 0x80e40002, 
    0xa0550006, 0x03000005, 0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 
    0x80080000, 0x80ff0000, 0x90ff0000, 0x03000005, 0x80070000, 0x80e40001, 
    0x80e40000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DCUBEMAP=1 /DVERTEXCOLOR=1 /DENVMAPMASK=1 /DBASEALPHAENVMAPMASK=1
//    /DAACLAMP=1 /Dmain=main /Emain /Tps_2_a /nologo /Fhtmpshader.h
//    ShatteredGlass_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseTextureSampler;
//   sampler2D DetailSampler;
//   sampler2D EnvmapMaskSampler;
//   samplerCUBE EnvmapSampler;
//   sampler2D LightmapSampler;
//   samplerCUBE NormalizeSampler;
//   float3 g_DiffuseModulation;
//   float3 g_EnvmapContrast;
//   float3 g_EnvmapSaturation;
//   float4 g_EnvmapTint;
//   float4 g_FresnelReflection;
//   float3 g_OverbrightFactor;
//
//
// Registers:
//
//   Name                Reg   Size
//   ------------------- ----- ----
//   g_EnvmapTint        c0       1
//   g_DiffuseModulation c1       1
//   g_EnvmapContrast    c2       1
//   g_EnvmapSaturation  c3       1
//   g_FresnelReflection c4       1
//   g_OverbrightFactor  c6       1
//   BaseTextureSampler  s0       1
//   LightmapSampler     s1       1
//   EnvmapSampler       s2       1
//   DetailSampler       s3       1
//   EnvmapMaskSampler   s4       1
//   NormalizeSampler    s6       1
//


static unsigned int pixelShader_ShatteredGlass_ps20_31[] =
{
    0xffff0201, 0x0095fffe, 0x42415443, 0x0000001c, 0x0000022a, 0xffff0201, 
    0x0000000c, 0x0000001c, 0x00000000, 0x00000223, 0x0000010c, 0x00000003, 
    0x00000001, 0x00000120, 0x00000000, 0x00000130, 0x00030003, 0x00000001, 
    0x00000120, 0x00000000, 0x0000013e, 0x00040003, 0x00000001, 0x00000120, 
    0x00000000, 0x00000150, 0x00020003, 0x00000001, 0x00000160, 0x00000000, 
    0x00000170, 0x00010003, 0x00000001, 0x00000120, 0x00000000, 0x00000180, 
    0x00060003, 0x00000001, 0x00000160, 0x00000000, 0x00000191, 0x00010002, 
    0x00000001, 0x000001a8, 0x00000000, 0x000001b8, 0x00020002, 0x00000001, 
    0x000001a8, 0x00000000, 0x000001c9, 0x00030002, 0x00000001, 0x000001a8, 
    0x00000000, 0x000001dc, 0x00000002, 0x00000001, 0x000001ec, 0x00000000, 
    0x000001fc, 0x00040002, 0x00000001, 0x000001ec, 0x00000000, 0x00000210, 
    0x00060002, 0x00000001, 0x000001a8, 0x00000000, 0x65736142, 0x74786554, 
    0x53657275, 0x6c706d61, 0xab007265, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x61746544, 0x61536c69, 0x656c706d, 0x6e450072, 0x70616d76, 
    0x6b73614d, 0x706d6153, 0x0072656c, 0x6d766e45, 0x61537061, 0x656c706d, 
    0xabab0072, 0x000e0004, 0x00010001, 0x00000001, 0x00000000, 0x6867694c, 
    0x70616d74, 0x706d6153, 0x0072656c, 0x6d726f4e, 0x7a696c61, 0x6d615365, 
    0x72656c70, 0x445f6700, 0x75666669, 0x6f4d6573, 0x616c7564, 0x6e6f6974, 
    0xababab00, 0x00030001, 0x00030001, 0x00000001, 0x00000000, 0x6e455f67, 
    0x70616d76, 0x746e6f43, 0x74736172, 0x455f6700, 0x616d766e, 0x74615370, 
    0x74617275, 0x006e6f69, 0x6e455f67, 0x70616d76, 0x746e6954, 0xababab00, 
    0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x72465f67, 0x656e7365, 
    0x6665526c, 0x7463656c, 0x006e6f69, 0x764f5f67, 0x72627265, 0x74686769, 
    0x74636146, 0x7000726f, 0x5f325f73, 0x694d0061, 0x736f7263, 0x2074666f, 
    0x20295228, 0x58443344, 0x68532039, 0x72656461, 0x6d6f4320, 0x656c6970, 
    0xabab0072, 0x05000051, 0xa00f0005, 0x3f800000, 0x40000000, 0xbf800000, 
    0x3eaaaaab, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x80000000, 
    0xb0030003, 0x0200001f, 0x80000000, 0xb0070004, 0x0200001f, 0x80000000, 
    0xb0070005, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 0x90000000, 
    0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x98000000, 
    0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x90000000, 
    0xa00f0804, 0x0200001f, 0x98000000, 0xa00f0806, 0x03000042, 0x800f0000, 
    0xb0e40004, 0xa0e40806, 0x04000004, 0x80070000, 0xa0550005, 0x80e40000, 
    0xa0aa0005, 0x03000008, 0x80080001, 0xb0e40005, 0xb0e40005, 0x03000008, 
    0x80080000, 0xb0e40005, 0x80e40000, 0x03000005, 0x80070000, 0x80e40000, 
    0x80ff0001, 0x03000002, 0x80080001, 0x80ff0000, 0x80ff0000, 0x03000002, 
    0x80080004, 0x81ff0000, 0xa0000005, 0x04000004, 0x80070002, 0x80ff0001, 
    0xb0e40005, 0x81e40000, 0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40801, 
    0x03000042, 0x800f0001, 0xb0e40000, 0xa0e40800, 0x03000042, 0x800f0003, 
    0xb0e40003, 0xa0e40804, 0x03000042, 0x800f0002, 0x80e40002, 0xa0e40802, 
    0x03000002, 0x80080000, 0x81ff0001, 0xa0000005, 0x03000005, 0x80070003, 
    0x80e40003, 0x80ff0000, 0x03000005, 0x80070002, 0x80e40002, 0x80e40003, 
    0x03000005, 0x80070003, 0x80e40002, 0xa0e40000, 0x04000004, 0x80070002, 
    0x80e40003, 0x80e40003, 0x81e40003, 0x04000004, 0x80070003, 0xa0e40002, 
    0x80e40002, 0x80e40003, 0x03000005, 0x80080001, 0x80ff0004, 0x80ff0004, 
    0x03000008, 0x80080000, 0x80e40003, 0xa0ff0005, 0x03000005, 0x80080001, 
    0x80ff0001, 0x80ff0001, 0x04000012, 0x80070002, 0xa0e40003, 0x80e40003, 
    0x80ff0000, 0x03000005, 0x80080000, 0x80ff0004, 0x80ff0001, 0x04000004, 
    0x80080001, 0x80ff0000, 0xa0aa0004, 0xa0ff0004, 0x03000005, 0x80070000, 
    0x80e40000, 0xa0e40001, 0x03000005, 0x80070002, 0x80e40002, 0x80ff0001, 
    0x03000005, 0x80070003, 0x80e40000, 0xa0000006, 0x03000042, 0x800f0000, 
    0xb0e40001, 0xa0e40803, 0x03000005, 0x80070000, 0x80e40001, 0x80e40000, 
    0x04000004, 0x80070001, 0xa0aa0006, 0x80e40003, 0xa0550006, 0x03000005, 
    0x80070000, 0x80e40000, 0x90e40000, 0x03000005, 0x80080000, 0x80ff0000, 
    0x90ff0000, 0x04000004, 0x80070000, 0x80e40000, 0x80e40001, 0x80e40002, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
static PrecompiledShaderByteCode_t ShatteredGlass_ps20_pixel_shaders[32] = 
{
	{ pixelShader_ShatteredGlass_ps20_0, sizeof( pixelShader_ShatteredGlass_ps20_0 ) },
	{ pixelShader_ShatteredGlass_ps20_1, sizeof( pixelShader_ShatteredGlass_ps20_1 ) },
	{ pixelShader_ShatteredGlass_ps20_2, sizeof( pixelShader_ShatteredGlass_ps20_2 ) },
	{ pixelShader_ShatteredGlass_ps20_3, sizeof( pixelShader_ShatteredGlass_ps20_3 ) },
	{ pixelShader_ShatteredGlass_ps20_4, sizeof( pixelShader_ShatteredGlass_ps20_4 ) },
	{ pixelShader_ShatteredGlass_ps20_5, sizeof( pixelShader_ShatteredGlass_ps20_5 ) },
	{ pixelShader_ShatteredGlass_ps20_6, sizeof( pixelShader_ShatteredGlass_ps20_6 ) },
	{ pixelShader_ShatteredGlass_ps20_7, sizeof( pixelShader_ShatteredGlass_ps20_7 ) },
	{ pixelShader_ShatteredGlass_ps20_8, sizeof( pixelShader_ShatteredGlass_ps20_8 ) },
	{ pixelShader_ShatteredGlass_ps20_9, sizeof( pixelShader_ShatteredGlass_ps20_9 ) },
	{ pixelShader_ShatteredGlass_ps20_10, sizeof( pixelShader_ShatteredGlass_ps20_10 ) },
	{ pixelShader_ShatteredGlass_ps20_11, sizeof( pixelShader_ShatteredGlass_ps20_11 ) },
	{ pixelShader_ShatteredGlass_ps20_12, sizeof( pixelShader_ShatteredGlass_ps20_12 ) },
	{ pixelShader_ShatteredGlass_ps20_13, sizeof( pixelShader_ShatteredGlass_ps20_13 ) },
	{ pixelShader_ShatteredGlass_ps20_14, sizeof( pixelShader_ShatteredGlass_ps20_14 ) },
	{ pixelShader_ShatteredGlass_ps20_15, sizeof( pixelShader_ShatteredGlass_ps20_15 ) },
	{ pixelShader_ShatteredGlass_ps20_16, sizeof( pixelShader_ShatteredGlass_ps20_16 ) },
	{ pixelShader_ShatteredGlass_ps20_17, sizeof( pixelShader_ShatteredGlass_ps20_17 ) },
	{ pixelShader_ShatteredGlass_ps20_18, sizeof( pixelShader_ShatteredGlass_ps20_18 ) },
	{ pixelShader_ShatteredGlass_ps20_19, sizeof( pixelShader_ShatteredGlass_ps20_19 ) },
	{ pixelShader_ShatteredGlass_ps20_20, sizeof( pixelShader_ShatteredGlass_ps20_20 ) },
	{ pixelShader_ShatteredGlass_ps20_21, sizeof( pixelShader_ShatteredGlass_ps20_21 ) },
	{ pixelShader_ShatteredGlass_ps20_22, sizeof( pixelShader_ShatteredGlass_ps20_22 ) },
	{ pixelShader_ShatteredGlass_ps20_23, sizeof( pixelShader_ShatteredGlass_ps20_23 ) },
	{ pixelShader_ShatteredGlass_ps20_24, sizeof( pixelShader_ShatteredGlass_ps20_24 ) },
	{ pixelShader_ShatteredGlass_ps20_25, sizeof( pixelShader_ShatteredGlass_ps20_25 ) },
	{ pixelShader_ShatteredGlass_ps20_26, sizeof( pixelShader_ShatteredGlass_ps20_26 ) },
	{ pixelShader_ShatteredGlass_ps20_27, sizeof( pixelShader_ShatteredGlass_ps20_27 ) },
	{ pixelShader_ShatteredGlass_ps20_28, sizeof( pixelShader_ShatteredGlass_ps20_28 ) },
	{ pixelShader_ShatteredGlass_ps20_29, sizeof( pixelShader_ShatteredGlass_ps20_29 ) },
	{ pixelShader_ShatteredGlass_ps20_30, sizeof( pixelShader_ShatteredGlass_ps20_30 ) },
	{ pixelShader_ShatteredGlass_ps20_31, sizeof( pixelShader_ShatteredGlass_ps20_31 ) },
};
struct ShatteredGlass_ps20PixelShader_t : public PrecompiledShader_t
{
	ShatteredGlass_ps20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x4;
		m_pByteCode = ShatteredGlass_ps20_pixel_shaders;
		m_nShaderCount = 32;
		m_pName = "ShatteredGlass_ps20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_PIXEL_SHADER, this );
	}
};
static ShatteredGlass_ps20PixelShader_t ShatteredGlass_ps20_PixelShaderInstance;
#endif // DEFINE_SHADERS
