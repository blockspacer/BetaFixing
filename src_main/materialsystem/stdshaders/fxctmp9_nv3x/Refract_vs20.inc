class refract_vs20_Index
{
private:
	int m_nNUM_BONES;
#ifdef _DEBUG
	bool m_bNUM_BONES;
#endif
public:
	void SetNUM_BONES( int i )
	{
		Assert( i >= 0 && i <= 3 );
		m_nNUM_BONES = i;
#ifdef _DEBUG
		m_bNUM_BONES = true;
#endif
	}
	void SetNUM_BONES( bool i )
	{
		m_nNUM_BONES = i ? 1 : 0;
#ifdef _DEBUG
		m_bNUM_BONES = true;
#endif
	}
private:
	int m_nMODEL;
#ifdef _DEBUG
	bool m_bMODEL;
#endif
public:
	void SetMODEL( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nMODEL = i;
#ifdef _DEBUG
		m_bMODEL = true;
#endif
	}
	void SetMODEL( bool i )
	{
		m_nMODEL = i ? 1 : 0;
#ifdef _DEBUG
		m_bMODEL = true;
#endif
	}
public:
	refract_vs20_Index()
	{
#ifdef _DEBUG
		m_bNUM_BONES = false;
#endif // _DEBUG
		m_nNUM_BONES = 0;
#ifdef _DEBUG
		m_bMODEL = false;
#endif // _DEBUG
		m_nMODEL = 0;
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
		bool bAllStaticVarsDefined = m_bNUM_BONES && m_bMODEL;
		bool bNoStaticVarsDefined = !m_bNUM_BONES && !m_bMODEL;
		Assert( bAllStaticVarsDefined != bNoStaticVarsDefined );
#endif // _DEBUG
		return ( 1 * m_nNUM_BONES ) + ( 4 * m_nMODEL ) + 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=0 /DMODEL=0 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_0[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 0x0200001f, 
    0x80000006, 0x900f0003, 0x0200001f, 0x80000007, 0x900f0004, 0x03000008, 
    0x80010001, 0x90e40001, 0xa0e4002a, 0x03000008, 0x80020001, 0x90e40001, 
    0xa0e4002b, 0x03000008, 0x80040001, 0x90e40001, 0xa0e4002c, 0x03000008, 
    0xe0010006, 0x80e40001, 0xa0e40008, 0x02000001, 0x80080000, 0xa0550000, 
    0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 0x03000009, 0x80020000, 
    0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 0x90e40000, 0xa0e4002c, 
    0x03000008, 0xe0020006, 0x80e40001, 0xa0e40009, 0x03000009, 0x80040002, 
    0x80e40000, 0xa0e40009, 0x03000008, 0xe0040006, 0x80e40001, 0xa0e4000a, 
    0x02000001, 0x80020003, 0x81aa0002, 0x02000001, 0xc0020000, 0x80aa0002, 
    0x03000009, 0x80010003, 0x80e40000, 0xa0e40008, 0x03000009, 0x80020004, 
    0x80e40000, 0xa0e4000b, 0x03000009, 0x80020005, 0x80e40000, 0xa0e4000a, 
    0x03000002, 0x80070000, 0x81e40000, 0xa0e40002, 0x03000002, 0x80030002, 
    0x80e40003, 0x80550004, 0x02000001, 0xc0010000, 0x80000003, 0x03000005, 
    0xe0030005, 0x80e40002, 0xa0ff0000, 0x04000004, 0xc00f0001, 0x81550005, 
    0xa0ff0010, 0xa0000010, 0x03000008, 0x80010002, 0x90e40003, 0xa0e4002a, 
    0x03000008, 0x80020002, 0x90e40003, 0xa0e4002b, 0x03000008, 0x80040002, 
    0x90e40003, 0xa0e4002c, 0x02000001, 0xc0040000, 0x80550005, 0x03000008, 
    0xe0010001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0010002, 0x80000002, 
    0x02000001, 0xe0010003, 0x80550002, 0x02000001, 0xe0010004, 0x80aa0002, 
    0x03000008, 0x80010002, 0x90e40004, 0xa0e4002a, 0x03000008, 0x80020002, 
    0x90e40004, 0xa0e4002b, 0x03000008, 0x80040002, 0x90e40004, 0xa0e4002c, 
    0x03000008, 0xe0020001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0020002, 
    0x80000002, 0x02000001, 0xe0020003, 0x80550002, 0x02000001, 0xe0020004, 
    0x80aa0002, 0x03000008, 0xe0040001, 0x80e40000, 0x80e40001, 0x02000001, 
    0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 0x80550001, 0x02000001, 
    0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 0x90e40002, 0xa0e4005b, 
    0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 0xc0080000, 
    0x80550004, 0x02000001, 0xe0040005, 0x80550004, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=1 /DMODEL=0 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_1[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 0x0200001f, 
    0x80000006, 0x900f0003, 0x0200001f, 0x80000007, 0x900f0004, 0x03000008, 
    0x80010001, 0x90e40001, 0xa0e4002a, 0x03000008, 0x80020001, 0x90e40001, 
    0xa0e4002b, 0x03000008, 0x80040001, 0x90e40001, 0xa0e4002c, 0x03000008, 
    0xe0010006, 0x80e40001, 0xa0e40008, 0x02000001, 0x80080000, 0xa0550000, 
    0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 0x03000009, 0x80020000, 
    0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 0x90e40000, 0xa0e4002c, 
    0x03000008, 0xe0020006, 0x80e40001, 0xa0e40009, 0x03000009, 0x80040002, 
    0x80e40000, 0xa0e40009, 0x03000008, 0xe0040006, 0x80e40001, 0xa0e4000a, 
    0x02000001, 0x80020003, 0x81aa0002, 0x02000001, 0xc0020000, 0x80aa0002, 
    0x03000009, 0x80010003, 0x80e40000, 0xa0e40008, 0x03000009, 0x80020004, 
    0x80e40000, 0xa0e4000b, 0x03000009, 0x80020005, 0x80e40000, 0xa0e4000a, 
    0x03000002, 0x80070000, 0x81e40000, 0xa0e40002, 0x03000002, 0x80030002, 
    0x80e40003, 0x80550004, 0x02000001, 0xc0010000, 0x80000003, 0x03000005, 
    0xe0030005, 0x80e40002, 0xa0ff0000, 0x04000004, 0xc00f0001, 0x81550005, 
    0xa0ff0010, 0xa0000010, 0x03000008, 0x80010002, 0x90e40003, 0xa0e4002a, 
    0x03000008, 0x80020002, 0x90e40003, 0xa0e4002b, 0x03000008, 0x80040002, 
    0x90e40003, 0xa0e4002c, 0x02000001, 0xc0040000, 0x80550005, 0x03000008, 
    0xe0010001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0010002, 0x80000002, 
    0x02000001, 0xe0010003, 0x80550002, 0x02000001, 0xe0010004, 0x80aa0002, 
    0x03000008, 0x80010002, 0x90e40004, 0xa0e4002a, 0x03000008, 0x80020002, 
    0x90e40004, 0xa0e4002b, 0x03000008, 0x80040002, 0x90e40004, 0xa0e4002c, 
    0x03000008, 0xe0020001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0020002, 
    0x80000002, 0x02000001, 0xe0020003, 0x80550002, 0x02000001, 0xe0020004, 
    0x80aa0002, 0x03000008, 0xe0040001, 0x80e40000, 0x80e40001, 0x02000001, 
    0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 0x80550001, 0x02000001, 
    0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 0x90e40002, 0xa0e4005b, 
    0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 0xc0080000, 
    0x80550004, 0x02000001, 0xe0040005, 0x80550004, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=2 /DMODEL=0 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_2[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 0x0200001f, 
    0x80000006, 0x900f0003, 0x0200001f, 0x80000007, 0x900f0004, 0x03000008, 
    0x80010001, 0x90e40001, 0xa0e4002a, 0x03000008, 0x80020001, 0x90e40001, 
    0xa0e4002b, 0x03000008, 0x80040001, 0x90e40001, 0xa0e4002c, 0x03000008, 
    0xe0010006, 0x80e40001, 0xa0e40008, 0x02000001, 0x80080000, 0xa0550000, 
    0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 0x03000009, 0x80020000, 
    0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 0x90e40000, 0xa0e4002c, 
    0x03000008, 0xe0020006, 0x80e40001, 0xa0e40009, 0x03000009, 0x80040002, 
    0x80e40000, 0xa0e40009, 0x03000008, 0xe0040006, 0x80e40001, 0xa0e4000a, 
    0x02000001, 0x80020003, 0x81aa0002, 0x02000001, 0xc0020000, 0x80aa0002, 
    0x03000009, 0x80010003, 0x80e40000, 0xa0e40008, 0x03000009, 0x80020004, 
    0x80e40000, 0xa0e4000b, 0x03000009, 0x80020005, 0x80e40000, 0xa0e4000a, 
    0x03000002, 0x80070000, 0x81e40000, 0xa0e40002, 0x03000002, 0x80030002, 
    0x80e40003, 0x80550004, 0x02000001, 0xc0010000, 0x80000003, 0x03000005, 
    0xe0030005, 0x80e40002, 0xa0ff0000, 0x04000004, 0xc00f0001, 0x81550005, 
    0xa0ff0010, 0xa0000010, 0x03000008, 0x80010002, 0x90e40003, 0xa0e4002a, 
    0x03000008, 0x80020002, 0x90e40003, 0xa0e4002b, 0x03000008, 0x80040002, 
    0x90e40003, 0xa0e4002c, 0x02000001, 0xc0040000, 0x80550005, 0x03000008, 
    0xe0010001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0010002, 0x80000002, 
    0x02000001, 0xe0010003, 0x80550002, 0x02000001, 0xe0010004, 0x80aa0002, 
    0x03000008, 0x80010002, 0x90e40004, 0xa0e4002a, 0x03000008, 0x80020002, 
    0x90e40004, 0xa0e4002b, 0x03000008, 0x80040002, 0x90e40004, 0xa0e4002c, 
    0x03000008, 0xe0020001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0020002, 
    0x80000002, 0x02000001, 0xe0020003, 0x80550002, 0x02000001, 0xe0020004, 
    0x80aa0002, 0x03000008, 0xe0040001, 0x80e40000, 0x80e40001, 0x02000001, 
    0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 0x80550001, 0x02000001, 
    0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 0x90e40002, 0xa0e4005b, 
    0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 0xc0080000, 
    0x80550004, 0x02000001, 0xe0040005, 0x80550004, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=3 /DMODEL=0 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_3[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 0x0200001f, 
    0x80000006, 0x900f0003, 0x0200001f, 0x80000007, 0x900f0004, 0x03000008, 
    0x80010001, 0x90e40001, 0xa0e4002a, 0x03000008, 0x80020001, 0x90e40001, 
    0xa0e4002b, 0x03000008, 0x80040001, 0x90e40001, 0xa0e4002c, 0x03000008, 
    0xe0010006, 0x80e40001, 0xa0e40008, 0x02000001, 0x80080000, 0xa0550000, 
    0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 0x03000009, 0x80020000, 
    0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 0x90e40000, 0xa0e4002c, 
    0x03000008, 0xe0020006, 0x80e40001, 0xa0e40009, 0x03000009, 0x80040002, 
    0x80e40000, 0xa0e40009, 0x03000008, 0xe0040006, 0x80e40001, 0xa0e4000a, 
    0x02000001, 0x80020003, 0x81aa0002, 0x02000001, 0xc0020000, 0x80aa0002, 
    0x03000009, 0x80010003, 0x80e40000, 0xa0e40008, 0x03000009, 0x80020004, 
    0x80e40000, 0xa0e4000b, 0x03000009, 0x80020005, 0x80e40000, 0xa0e4000a, 
    0x03000002, 0x80070000, 0x81e40000, 0xa0e40002, 0x03000002, 0x80030002, 
    0x80e40003, 0x80550004, 0x02000001, 0xc0010000, 0x80000003, 0x03000005, 
    0xe0030005, 0x80e40002, 0xa0ff0000, 0x04000004, 0xc00f0001, 0x81550005, 
    0xa0ff0010, 0xa0000010, 0x03000008, 0x80010002, 0x90e40003, 0xa0e4002a, 
    0x03000008, 0x80020002, 0x90e40003, 0xa0e4002b, 0x03000008, 0x80040002, 
    0x90e40003, 0xa0e4002c, 0x02000001, 0xc0040000, 0x80550005, 0x03000008, 
    0xe0010001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0010002, 0x80000002, 
    0x02000001, 0xe0010003, 0x80550002, 0x02000001, 0xe0010004, 0x80aa0002, 
    0x03000008, 0x80010002, 0x90e40004, 0xa0e4002a, 0x03000008, 0x80020002, 
    0x90e40004, 0xa0e4002b, 0x03000008, 0x80040002, 0x90e40004, 0xa0e4002c, 
    0x03000008, 0xe0020001, 0x80e40000, 0x80e40002, 0x02000001, 0xe0020002, 
    0x80000002, 0x02000001, 0xe0020003, 0x80550002, 0x02000001, 0xe0020004, 
    0x80aa0002, 0x03000008, 0xe0040001, 0x80e40000, 0x80e40001, 0x02000001, 
    0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 0x80550001, 0x02000001, 
    0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 0x90e40002, 0xa0e4005b, 
    0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 0xc0080000, 
    0x80550004, 0x02000001, 0xe0040005, 0x80550004, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=0 /DMODEL=1 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42      3
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_4[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000003, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000003, 0x900f0001, 0x0200001f, 0x80000005, 0x900f0002, 0x0200001f, 
    0x80000006, 0x900f0003, 0x03000008, 0x80010001, 0x90e40001, 0xa0e4002a, 
    0x03000008, 0x80020001, 0x90e40001, 0xa0e4002b, 0x03000008, 0x80040001, 
    0x90e40001, 0xa0e4002c, 0x03000008, 0xe0010006, 0x80e40001, 0xa0e40008, 
    0x02000001, 0x80080000, 0xa0550000, 0x03000009, 0x80010000, 0x90e40000, 
    0xa0e4002a, 0x03000009, 0x80020000, 0x90e40000, 0xa0e4002b, 0x03000009, 
    0x80040000, 0x90e40000, 0xa0e4002c, 0x03000008, 0xe0020006, 0x80e40001, 
    0xa0e40009, 0x03000009, 0x80040002, 0x80e40000, 0xa0e40009, 0x03000008, 
    0xe0040006, 0x80e40001, 0xa0e4000a, 0x02000001, 0x80020003, 0x81aa0002, 
    0x02000001, 0xc0020000, 0x80aa0002, 0x03000009, 0x80010003, 0x80e40000, 
    0xa0e40008, 0x03000009, 0x80020004, 0x80e40000, 0xa0e4000b, 0x03000009, 
    0x80020005, 0x80e40000, 0xa0e4000a, 0x03000002, 0x80070002, 0x81e40000, 
    0xa0e40002, 0x03000002, 0x80030000, 0x80e40003, 0x80550004, 0x02000001, 
    0xc0010000, 0x80000003, 0x03000005, 0xe0030005, 0x80e40000, 0xa0ff0000, 
    0x04000004, 0xc00f0001, 0x81550005, 0xa0ff0010, 0xa0000010, 0x03000008, 
    0x80010003, 0x90e40003, 0xa0e4002a, 0x03000008, 0x80020003, 0x90e40003, 
    0xa0e4002b, 0x03000008, 0x80040003, 0x90e40003, 0xa0e4002c, 0x02000001, 
    0xc0040000, 0x80550005, 0x03000005, 0x80070000, 0x80d20001, 0x80c90003, 
    0x03000008, 0xe0010001, 0x80e40002, 0x80e40003, 0x04000004, 0x80070000, 
    0x80c90001, 0x80d20003, 0x81e40000, 0x02000001, 0xe0010002, 0x80000003, 
    0x02000001, 0xe0010003, 0x80550003, 0x02000001, 0xe0010004, 0x80aa0003, 
    0x03000005, 0x80070000, 0x80e40000, 0x90ff0003, 0x03000008, 0xe0020001, 
    0x80e40002, 0x80e40000, 0x03000008, 0xe0040001, 0x80e40002, 0x80e40001, 
    0x02000001, 0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 0x80550001, 
    0x02000001, 0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 0x90e40002, 
    0xa0e4005b, 0x03000009, 0xe0020000, 0x90e40002, 0xa0e4005c, 0x02000001, 
    0xc0080000, 0x80550004, 0x02000001, 0xe0040005, 0x80550004, 0x02000001, 
    0xe0020002, 0x80000000, 0x02000001, 0xe0020003, 0x80550000, 0x02000001, 
    0xe0020004, 0x80aa0000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=1 /DMODEL=1 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42     48
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_5[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000030, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x05000051, 0xa00f0001, 0x443f4060, 0x00000000, 
    0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000002, 0x900f0001, 0x0200001f, 0x80000003, 0x900f0002, 0x0200001f, 
    0x80000005, 0x900f0003, 0x0200001f, 0x80000006, 0x900f0004, 0x03000005, 
    0x80080000, 0x90aa0001, 0xa0000001, 0x0200002e, 0xb0080000, 0x80ff0000, 
    0x04000008, 0x80010001, 0x90e40002, 0xa0e4202a, 0xb0ff0000, 0x04000008, 
    0x80020001, 0x90e40002, 0xa0e4202b, 0xb0ff0000, 0x04000008, 0x80040001, 
    0x90e40002, 0xa0e4202c, 0xb0ff0000, 0x03000008, 0xe0010006, 0x80e40001, 
    0xa0e40008, 0x03000008, 0xe0020006, 0x80e40001, 0xa0e40009, 0x04000009, 
    0x80010000, 0x90e40000, 0xa0e4202a, 0xb0ff0000, 0x04000009, 0x80020000, 
    0x90e40000, 0xa0e4202b, 0xb0ff0000, 0x04000009, 0x80040000, 0x90e40000, 
    0xa0e4202c, 0xb0ff0000, 0x02000001, 0x80080000, 0xa0550000, 0x03000008, 
    0xe0040006, 0x80e40001, 0xa0e4000a, 0x03000009, 0x80040002, 0x80e40000, 
    0xa0e40009, 0x02000001, 0x80020002, 0x81aa0002, 0x02000001, 0xc0020000, 
    0x80aa0002, 0x03000009, 0x80010002, 0x80e40000, 0xa0e40008, 0x03000009, 
    0x80020004, 0x80e40000, 0xa0e4000b, 0x03000009, 0x80020003, 0x80e40000, 
    0xa0e4000a, 0x03000002, 0x80030000, 0x80e40002, 0x80550004, 0x02000001, 
    0xc0010000, 0x80000002, 0x03000005, 0xe0030005, 0x80e40000, 0xa0ff0000, 
    0x04000004, 0xc00f0001, 0x81550003, 0xa0ff0010, 0xa0000010, 0x02000001, 
    0xc0040000, 0x80550003, 0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 
    0x03000009, 0x80020000, 0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 
    0x90e40000, 0xa0e4002c, 0x04000008, 0x80010003, 0x90e40004, 0xa0e4202a, 
    0xb0ff0000, 0x04000008, 0x80020003, 0x90e40004, 0xa0e4202b, 0xb0ff0000, 
    0x04000008, 0x80040003, 0x90e40004, 0xa0e4202c, 0xb0ff0000, 0x03000002, 
    0x80070002, 0x81e40000, 0xa0e40002, 0x03000005, 0x80070000, 0x80d20001, 
    0x80c90003, 0x03000008, 0xe0010001, 0x80e40002, 0x80e40003, 0x04000004, 
    0x80070000, 0x80c90001, 0x80d20003, 0x81e40000, 0x02000001, 0xe0010002, 
    0x80000003, 0x02000001, 0xe0010003, 0x80550003, 0x02000001, 0xe0010004, 
    0x80aa0003, 0x03000005, 0x80070000, 0x80e40000, 0x90ff0004, 0x03000008, 
    0xe0020001, 0x80e40002, 0x80e40000, 0x03000008, 0xe0040001, 0x80e40002, 
    0x80e40001, 0x02000001, 0xe0040002, 0x80000001, 0x02000001, 0xe0040003, 
    0x80550001, 0x02000001, 0xe0040004, 0x80aa0001, 0x03000009, 0xe0010000, 
    0x90e40003, 0xa0e4005b, 0x03000009, 0xe0020000, 0x90e40003, 0xa0e4005c, 
    0x02000001, 0xc0080000, 0x80550004, 0x02000001, 0xe0040005, 0x80550004, 
    0x02000001, 0xe0020002, 0x80000000, 0x02000001, 0xe0020003, 0x80550000, 
    0x02000001, 0xe0020004, 0x80aa0000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=2 /DMODEL=1 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42     48
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_6[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000030, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x05000051, 0xa00f0001, 0x443f4060, 0x00000000, 
    0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000001, 0x900f0001, 0x0200001f, 0x80000002, 0x900f0002, 0x0200001f, 
    0x80000003, 0x900f0003, 0x0200001f, 0x80000005, 0x900f0004, 0x0200001f, 
    0x80000006, 0x900f0005, 0x03000005, 0x80030000, 0x90e60002, 0xa0000001, 
    0x0200002e, 0xb0030000, 0x80e40000, 0x04000005, 0x800f0000, 0x90550001, 
    0xa0e4202a, 0xb0550000, 0x05000004, 0x800f0003, 0xa0e4202a, 0xb0000000, 
    0x90000001, 0x80e40000, 0x03000008, 0x80010004, 0x90e40003, 0x80e40003, 
    0x04000005, 0x800f0001, 0x90550001, 0xa0e4202b, 0xb0550000, 0x04000005, 
    0x800f0000, 0x90550001, 0xa0e4202c, 0xb0550000, 0x05000004, 0x800f0002, 
    0xa0e4202b, 0xb0000000, 0x90000001, 0x80e40001, 0x05000004, 0x800f0001, 
    0xa0e4202c, 0xb0000000, 0x90000001, 0x80e40000, 0x03000008, 0x80020004, 
    0x90e40003, 0x80e40002, 0x03000008, 0x80040004, 0x90e40003, 0x80e40001, 
    0x03000008, 0xe0010006, 0x80e40004, 0xa0e40008, 0x03000008, 0xe0020006, 
    0x80e40004, 0xa0e40009, 0x03000008, 0xe0040006, 0x80e40004, 0xa0e4000a, 
    0x03000009, 0x80010000, 0x90e40000, 0x80e40003, 0x03000008, 0x80010003, 
    0x90e40005, 0x80e40003, 0x03000009, 0x80020000, 0x90e40000, 0x80e40002, 
    0x03000009, 0x80040000, 0x90e40000, 0x80e40001, 0x02000001, 0x80080000, 
    0xa0550000, 0x03000008, 0x80020003, 0x90e40005, 0x80e40002, 0x03000009, 
    0x80040002, 0x80e40000, 0xa0e40009, 0x03000008, 0x80040003, 0x90e40005, 
    0x80e40001, 0x02000001, 0x80020001, 0x81aa0002, 0x02000001, 0xc0020000, 
    0x80aa0002, 0x03000009, 0x80010001, 0x80e40000, 0xa0e40008, 0x03000009, 
    0x80020002, 0x80e40000, 0xa0e4000b, 0x03000009, 0x80020005, 0x80e40000, 
    0xa0e4000a, 0x03000002, 0x80030000, 0x80e40001, 0x80550002, 0x02000001, 
    0xc0010000, 0x80000001, 0x03000005, 0xe0030005, 0x80e40000, 0xa0ff0000, 
    0x04000004, 0xc00f0001, 0x81550005, 0xa0ff0010, 0xa0000010, 0x02000001, 
    0xc0040000, 0x80550005, 0x03000009, 0x80010000, 0x90e40000, 0xa0e4002a, 
    0x03000009, 0x80020000, 0x90e40000, 0xa0e4002b, 0x03000009, 0x80040000, 
    0x90e40000, 0xa0e4002c, 0x03000002, 0x80070001, 0x81e40000, 0xa0e40002, 
    0x03000005, 0x80070000, 0x80d20004, 0x80c90003, 0x03000008, 0xe0010001, 
    0x80e40001, 0x80e40003, 0x04000004, 0x80070000, 0x80c90004, 0x80d20003, 
    0x81e40000, 0x02000001, 0xe0010002, 0x80000003, 0x02000001, 0xe0010003, 
    0x80550003, 0x02000001, 0xe0010004, 0x80aa0003, 0x03000005, 0x80070000, 
    0x80e40000, 0x90ff0005, 0x03000008, 0xe0020001, 0x80e40001, 0x80e40000, 
    0x03000008, 0xe0040001, 0x80e40001, 0x80e40004, 0x02000001, 0xe0040002, 
    0x80000004, 0x02000001, 0xe0040003, 0x80550004, 0x02000001, 0xe0040004, 
    0x80aa0004, 0x03000009, 0xe0010000, 0x90e40004, 0xa0e4005b, 0x03000009, 
    0xe0020000, 0x90e40004, 0xa0e4005c, 0x02000001, 0xc0080000, 0x80550002, 
    0x02000001, 0xe0040005, 0x80550002, 0x02000001, 0xe0020002, 0x80000000, 
    0x02000001, 0xe0020003, 0x80550000, 0x02000001, 0xe0020004, 0x80aa0000, 
    0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DNUM_BONES=3 /DMODEL=1 /Dmain=main /Emain /Tvs_2_0 /nologo
//    /Fhtmpshader.h Refract_vs20.fxc
//
//
// Parameters:
//
//   float4 cBumpTexCoordTransform[2];
//   float4 cEyePosWaterZ;
//   float4 cFogParams;
//   float4x3 cModel[16];
//   float4x4 cViewProj;
//
//
// Registers:
//
//   Name                   Reg   Size
//   ---------------------- ----- ----
//   cEyePosWaterZ          c2       1
//   cViewProj              c8       4
//   cFogParams             c16      1
//   cModel                 c42     48
//   cBumpTexCoordTransform c91      2
//


static unsigned int pixelShader_Refract_vs20_7[] =
{
    0xfffe0200, 0x004efffe, 0x42415443, 0x0000001c, 0x0000010f, 0xfffe0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x00000108, 0x00000080, 0x005b0002, 
    0x00000002, 0x00000098, 0x00000000, 0x000000a8, 0x00020002, 0x00000001, 
    0x000000b8, 0x00000000, 0x000000c8, 0x00100002, 0x00000001, 0x000000b8, 
    0x00000000, 0x000000d3, 0x002a0002, 0x00000030, 0x000000dc, 0x00000000, 
    0x000000ec, 0x00080002, 0x00000004, 0x000000f8, 0x00000000, 0x6d754263, 
    0x78655470, 0x726f6f43, 0x61725464, 0x6f66736e, 0xab006d72, 0x00030001, 
    0x00040001, 0x00000002, 0x00000000, 0x65794563, 0x57736f50, 0x72657461, 
    0xabab005a, 0x00030001, 0x00040001, 0x00000001, 0x00000000, 0x676f4663, 
    0x61726150, 0x6300736d, 0x65646f4d, 0xabab006c, 0x00030003, 0x00030004, 
    0x00000010, 0x00000000, 0x65695663, 0x6f725077, 0xabab006a, 0x00030003, 
    0x00040004, 0x00000001, 0x00000000, 0x325f7376, 0x4d00305f, 0x6f726369, 
    0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 0x6f432072, 
    0x6c69706d, 0xab007265, 0x05000051, 0xa00f0001, 0x443f4060, 0x00000000, 
    0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0x900f0000, 0x0200001f, 
    0x80000001, 0x900f0001, 0x0200001f, 0x80000002, 0x900f0002, 0x0200001f, 
    0x80000003, 0x900f0003, 0x0200001f, 0x80000005, 0x900f0004, 0x0200001f, 
    0x80000006, 0x900f0005, 0x03000005, 0x80070000, 0x90c60002, 0xa0000001, 
    0x0200002e, 0xb0070000, 0x80e40000, 0x03000002, 0x80080001, 0x91000001, 
    0xa0550000, 0x04000005, 0x800f0000, 0x90550001, 0xa0e4202a, 0xb0550000, 
    0x03000002, 0x80080004, 0x80ff0001, 0x91550001, 0x05000004, 0x800f0000, 
    0xa0e4202a, 0xb0000000, 0x90000001, 0x80e40000, 0x05000004, 0x800f0003, 
    0xa0e4202a, 0xb0aa0000, 0x80ff0004, 0x80e40000, 0x03000008, 0x80010004, 
    0x90e40003, 0x80e40003, 0x04000005, 0x800f0001, 0x90550001, 0xa0e4202b, 
    0xb0550000, 0x04000005, 0x800f0000, 0x90550001, 0xa0e4202c, 0xb0550000, 
    0x05000004, 0x800f0001, 0xa0e4202b, 0xb0000000, 0x90000001, 0x80e40001, 
    0x05000004, 0x800f0000, 0xa0e4202c, 0xb0000000, 0x90000001, 0x80e40000, 
    0x05000004, 0x800f0002, 0xa0e4202b, 0xb0aa0000, 0x80ff0004, 0x80e40001, 
    0x05000004, 0x800f0001, 0xa0e4202c, 0xb0aa0000, 0x80ff0004, 0x80e40000, 
    0x03000008, 0x80020004, 0x90e40003, 0x80e40002, 0x03000008, 0x80040004, 
    0x90e40003, 0x80e40001, 0x03000008, 0xe0010006, 0x80e40004, 0xa0e40008, 
    0x03000008, 0xe0020006, 0x80e40004, 0xa0e40009, 0x03000008, 0xe0040006, 
    0x80e40004, 0xa0e4000a, 0x03000009, 0x80010000, 0x90e40000, 0x80e40003, 
    0x03000008, 0x80010003, 0x90e40005, 0x80e40003, 0x03000009, 0x80020000, 
    0x90e40000, 0x80e40002, 0x03000009, 0x80040000, 0x90e40000, 0x80e40001, 
    0x02000001, 0x80080000, 0xa0550000, 0x03000008, 0x80020003, 0x90e40005, 
    0x80e40002, 0x03000009, 0x80040002, 0x80e40000, 0xa0e40009, 0x03000008, 
    0x80040003, 0x90e40005, 0x80e40001, 0x02000001, 0x80020001, 0x81aa0002, 
    0x02000001, 0xc0020000, 0x80aa0002, 0x03000009, 0x80010001, 0x80e40000, 
    0xa0e40008, 0x03000009, 0x80020002, 0x80e40000, 0xa0e4000b, 0x03000009, 
    0x80020005, 0x80e40000, 0xa0e4000a, 0x03000002, 0x80030000, 0x80e40001, 
    0x80550002, 0x02000001, 0xc0010000, 0x80000001, 0x03000005, 0xe0030005, 
    0x80e40000, 0xa0ff0000, 0x04000004, 0xc00f0001, 0x81550005, 0xa0ff0010, 
    0xa0000010, 0x02000001, 0xc0040000, 0x80550005, 0x03000009, 0x80010000, 
    0x90e40000, 0xa0e4002a, 0x03000009, 0x80020000, 0x90e40000, 0xa0e4002b, 
    0x03000009, 0x80040000, 0x90e40000, 0xa0e4002c, 0x03000002, 0x80070001, 
    0x81e40000, 0xa0e40002, 0x03000005, 0x80070000, 0x80d20004, 0x80c90003, 
    0x03000008, 0xe0010001, 0x80e40001, 0x80e40003, 0x04000004, 0x80070000, 
    0x80c90004, 0x80d20003, 0x81e40000, 0x02000001, 0xe0010002, 0x80000003, 
    0x02000001, 0xe0010003, 0x80550003, 0x02000001, 0xe0010004, 0x80aa0003, 
    0x03000005, 0x80070000, 0x80e40000, 0x90ff0005, 0x03000008, 0xe0020001, 
    0x80e40001, 0x80e40000, 0x03000008, 0xe0040001, 0x80e40001, 0x80e40004, 
    0x02000001, 0xe0040002, 0x80000004, 0x02000001, 0xe0040003, 0x80550004, 
    0x02000001, 0xe0040004, 0x80aa0004, 0x03000009, 0xe0010000, 0x90e40004, 
    0xa0e4005b, 0x03000009, 0xe0020000, 0x90e40004, 0xa0e4005c, 0x02000001, 
    0xc0080000, 0x80550002, 0x02000001, 0xe0040005, 0x80550002, 0x02000001, 
    0xe0020002, 0x80000000, 0x02000001, 0xe0020003, 0x80550000, 0x02000001, 
    0xe0020004, 0x80aa0000, 0x0000ffff
};
static PrecompiledShaderByteCode_t Refract_vs20_pixel_shaders[8] = 
{
	{ pixelShader_Refract_vs20_0, sizeof( pixelShader_Refract_vs20_0 ) },
	{ pixelShader_Refract_vs20_1, sizeof( pixelShader_Refract_vs20_1 ) },
	{ pixelShader_Refract_vs20_2, sizeof( pixelShader_Refract_vs20_2 ) },
	{ pixelShader_Refract_vs20_3, sizeof( pixelShader_Refract_vs20_3 ) },
	{ pixelShader_Refract_vs20_4, sizeof( pixelShader_Refract_vs20_4 ) },
	{ pixelShader_Refract_vs20_5, sizeof( pixelShader_Refract_vs20_5 ) },
	{ pixelShader_Refract_vs20_6, sizeof( pixelShader_Refract_vs20_6 ) },
	{ pixelShader_Refract_vs20_7, sizeof( pixelShader_Refract_vs20_7 ) },
};
struct Refract_vs20PixelShader_t : public PrecompiledShader_t
{
	Refract_vs20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x0;
		m_pByteCode = Refract_vs20_pixel_shaders;
		m_nShaderCount = 8;
		m_pName = "Refract_vs20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_VERTEX_SHADER, this );
	}
};
static Refract_vs20PixelShader_t Refract_vs20_PixelShaderInstance;
#endif // DEFINE_SHADERS
