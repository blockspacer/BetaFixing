class showdestalpha_ps20_Index
{
private:
	int m_nMULTIPLYBYCOLOR;
#ifdef _DEBUG
	bool m_bMULTIPLYBYCOLOR;
#endif
public:
	void SetMULTIPLYBYCOLOR( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nMULTIPLYBYCOLOR = i;
#ifdef _DEBUG
		m_bMULTIPLYBYCOLOR = true;
#endif
	}
	void SetMULTIPLYBYCOLOR( bool i )
	{
		m_nMULTIPLYBYCOLOR = i ? 1 : 0;
#ifdef _DEBUG
		m_bMULTIPLYBYCOLOR = true;
#endif
	}
private:
	int m_nMULTIPLYBYALPHA;
#ifdef _DEBUG
	bool m_bMULTIPLYBYALPHA;
#endif
public:
	void SetMULTIPLYBYALPHA( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nMULTIPLYBYALPHA = i;
#ifdef _DEBUG
		m_bMULTIPLYBYALPHA = true;
#endif
	}
	void SetMULTIPLYBYALPHA( bool i )
	{
		m_nMULTIPLYBYALPHA = i ? 1 : 0;
#ifdef _DEBUG
		m_bMULTIPLYBYALPHA = true;
#endif
	}
private:
	int m_nMULTIPLYBY_MAX_HDR_OVERBRIGHT;
#ifdef _DEBUG
	bool m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT;
#endif
public:
	void SetMULTIPLYBY_MAX_HDR_OVERBRIGHT( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nMULTIPLYBY_MAX_HDR_OVERBRIGHT = i;
#ifdef _DEBUG
		m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT = true;
#endif
	}
	void SetMULTIPLYBY_MAX_HDR_OVERBRIGHT( bool i )
	{
		m_nMULTIPLYBY_MAX_HDR_OVERBRIGHT = i ? 1 : 0;
#ifdef _DEBUG
		m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT = true;
#endif
	}
public:
	showdestalpha_ps20_Index()
	{
#ifdef _DEBUG
		m_bMULTIPLYBYCOLOR = false;
#endif // _DEBUG
		m_nMULTIPLYBYCOLOR = 0;
#ifdef _DEBUG
		m_bMULTIPLYBYALPHA = false;
#endif // _DEBUG
		m_nMULTIPLYBYALPHA = 0;
#ifdef _DEBUG
		m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT = false;
#endif // _DEBUG
		m_nMULTIPLYBY_MAX_HDR_OVERBRIGHT = 0;
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
		bool bAllStaticVarsDefined = m_bMULTIPLYBYCOLOR && m_bMULTIPLYBYALPHA && m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT;
		bool bNoStaticVarsDefined = !m_bMULTIPLYBYCOLOR && !m_bMULTIPLYBYALPHA && !m_bMULTIPLYBY_MAX_HDR_OVERBRIGHT;
		Assert( bAllStaticVarsDefined != bNoStaticVarsDefined );
#endif // _DEBUG
		return ( 1 * m_nMULTIPLYBYCOLOR ) + ( 2 * m_nMULTIPLYBYALPHA ) + ( 4 * m_nMULTIPLYBY_MAX_HDR_OVERBRIGHT ) + 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=0 /DMULTIPLYBYALPHA=0
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=0 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//

static unsigned int pixelShader_ShowDestAlpha_ps20_0[] =
{
    0xffff0200, 0x0013fffe, 0x42415443, 0x0000001c, 0x00000023, 0xffff0200, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x02000001, 0x800f0000, 0xa0000000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=1 /DMULTIPLYBYALPHA=0
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=0 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_1[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x3f800000, 
    0x00000000, 0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x02000001, 0x80080000, 0xa0000000, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=0 /DMULTIPLYBYALPHA=1
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=0 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_2[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x02000001, 0x80070000, 0x80ff0000, 0x02000001, 0x800f0800, 
    0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=1 /DMULTIPLYBYALPHA=1
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=0 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_3[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x02000001, 
    0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=0 /DMULTIPLYBYALPHA=0
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=1 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//

static unsigned int pixelShader_ShowDestAlpha_ps20_4[] =
{
    0xffff0200, 0x0013fffe, 0x42415443, 0x0000001c, 0x00000023, 0xffff0200, 
    0x00000000, 0x00000000, 0x00000000, 0x0000001c, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x41800000, 
    0x41800000, 0x41800000, 0x3f800000, 0x02000001, 0x800f0000, 0xa0e40000, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=1 /DMULTIPLYBYALPHA=0
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=1 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_5[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x41800000, 
    0x3f800000, 0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x03000005, 0x80070000, 0x80e40000, 0xa0000000, 0x02000001, 
    0x80080000, 0xa0550000, 0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=0 /DMULTIPLYBYALPHA=1
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=1 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_6[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x41800000, 
    0x00000000, 0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x03000005, 0x80070000, 0x80ff0000, 0xa0000000, 0x02000001, 
    0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMULTIPLYBYCOLOR=1 /DMULTIPLYBYALPHA=1
//    /DMULTIPLYBY_MAX_HDR_OVERBRIGHT=1 /Dmain=main /Emain /Tps_2_0 /nologo
//    /Fhtmpshader.h ShowDestAlpha_ps20.fxc
//
//
// Parameters:
//
//   sampler2D TexSampler;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   TexSampler   s0       1
//


static unsigned int pixelShader_ShowDestAlpha_ps20_7[] =
{
    0xffff0200, 0x001ffffe, 0x42415443, 0x0000001c, 0x00000053, 0xffff0200, 
    0x00000001, 0x0000001c, 0x00000000, 0x0000004c, 0x00000030, 0x00000003, 
    0x00000001, 0x0000003c, 0x00000000, 0x53786554, 0x6c706d61, 0xab007265, 
    0x000c0004, 0x00010001, 0x00000001, 0x00000000, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x41800000, 
    0x00000000, 0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x90000000, 0xa00f0800, 0x03000042, 0x800f0000, 0xb0e40000, 
    0xa0e40800, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0000, 0x03000005, 
    0x80070000, 0x80e40000, 0xa0000000, 0x02000001, 0x800f0800, 0x80e40000, 
    0x0000ffff
};
static PrecompiledShaderByteCode_t ShowDestAlpha_ps20_pixel_shaders[8] = 
{
	{ pixelShader_ShowDestAlpha_ps20_0, sizeof( pixelShader_ShowDestAlpha_ps20_0 ) },
	{ pixelShader_ShowDestAlpha_ps20_1, sizeof( pixelShader_ShowDestAlpha_ps20_1 ) },
	{ pixelShader_ShowDestAlpha_ps20_2, sizeof( pixelShader_ShowDestAlpha_ps20_2 ) },
	{ pixelShader_ShowDestAlpha_ps20_3, sizeof( pixelShader_ShowDestAlpha_ps20_3 ) },
	{ pixelShader_ShowDestAlpha_ps20_4, sizeof( pixelShader_ShowDestAlpha_ps20_4 ) },
	{ pixelShader_ShowDestAlpha_ps20_5, sizeof( pixelShader_ShowDestAlpha_ps20_5 ) },
	{ pixelShader_ShowDestAlpha_ps20_6, sizeof( pixelShader_ShowDestAlpha_ps20_6 ) },
	{ pixelShader_ShowDestAlpha_ps20_7, sizeof( pixelShader_ShowDestAlpha_ps20_7 ) },
};
struct ShowDestAlpha_ps20PixelShader_t : public PrecompiledShader_t
{
	ShowDestAlpha_ps20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x0;
		m_pByteCode = ShowDestAlpha_ps20_pixel_shaders;
		m_nShaderCount = 8;
		m_pName = "ShowDestAlpha_ps20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_PIXEL_SHADER, this );
	}
};
static ShowDestAlpha_ps20PixelShader_t ShowDestAlpha_ps20_PixelShaderInstance;
#endif // DEFINE_SHADERS
