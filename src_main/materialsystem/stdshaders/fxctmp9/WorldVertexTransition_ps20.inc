class worldvertextransition_ps20_Index
{
private:
	int m_nMACROS;
#ifdef _DEBUG
	bool m_bMACROS;
#endif
public:
	void SetMACROS( int i )
	{
		Assert( i >= 0 && i <= 1 );
		m_nMACROS = i;
#ifdef _DEBUG
		m_bMACROS = true;
#endif
	}
	void SetMACROS( bool i )
	{
		m_nMACROS = i ? 1 : 0;
#ifdef _DEBUG
		m_bMACROS = true;
#endif
	}
public:
	worldvertextransition_ps20_Index()
	{
#ifdef _DEBUG
		m_bMACROS = false;
#endif // _DEBUG
		m_nMACROS = 0;
	}
	int GetIndex()
	{
		// Asserts to make sure that we aren't using any skipped combinations.
		// Asserts to make sure that we are setting all of the combination vars.
#ifdef _DEBUG
		bool bAllStaticVarsDefined = m_bMACROS;
		bool bNoStaticVarsDefined = !m_bMACROS;
		Assert( bAllStaticVarsDefined != bNoStaticVarsDefined );
#endif // _DEBUG
		return ( 1 * m_nMACROS ) + 0;
	}
};
#ifdef DEFINE_SHADERS
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMACROS=0 /Dmain=main /Emain /Tps_2_0 /nologo /Fhtmpshader.h
//    WorldVertexTransition_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseSampler;
//   sampler2D BaseSampler2;
//   sampler2D LightmapAlphaSampler;
//   sampler2D LightmapSampler;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   BaseSampler          s0       1
//   BaseSampler2         s1       1
//   LightmapSampler      s2       1
//   LightmapAlphaSampler s3       1
//


static unsigned int pixelShader_WorldVertexTransition_ps20_0[] =
{
    0xffff0200, 0x003bfffe, 0x42415443, 0x0000001c, 0x000000c1, 0xffff0200, 
    0x00000004, 0x0000001c, 0x00000000, 0x000000ba, 0x0000006c, 0x00000003, 
    0x00000001, 0x00000078, 0x00000000, 0x00000088, 0x00010003, 0x00000001, 
    0x00000078, 0x00000000, 0x00000095, 0x00030003, 0x00000001, 0x00000078, 
    0x00000000, 0x000000aa, 0x00020003, 0x00000001, 0x00000078, 0x00000000, 
    0x65736142, 0x706d6153, 0x0072656c, 0x000c0004, 0x00010001, 0x00000001, 
    0x00000000, 0x65736142, 0x706d6153, 0x3272656c, 0x67694c00, 0x616d7468, 
    0x706c4170, 0x61536168, 0x656c706d, 0x694c0072, 0x6d746867, 0x61537061, 
    0x656c706d, 0x73700072, 0x305f325f, 0x63694d00, 0x6f736f72, 0x28207466, 
    0x44202952, 0x39584433, 0x61685320, 0x20726564, 0x706d6f43, 0x72656c69, 
    0xababab00, 0x05000051, 0xa00f0000, 0x3eaaaa3b, 0x00000000, 0x00000000, 
    0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 0x0200001f, 0x80000000, 
    0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 0x0200001f, 0x90000000, 
    0xa00f0800, 0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 
    0xa00f0802, 0x0200001f, 0x90000000, 0xa00f0803, 0x03000042, 0x800f0002, 
    0xb0e40002, 0xa0e40803, 0x03000042, 0x800f0003, 0xb0e40000, 0xa0e40800, 
    0x03000042, 0x800f0004, 0xb0e40001, 0xa0e40801, 0x03000042, 0x800f0000, 
    0xb0e40002, 0xa0e40802, 0x03000008, 0x80080003, 0x80e40003, 0xa0000000, 
    0x03000008, 0x80080004, 0x80e40004, 0xa0000000, 0x04000012, 0x800f0001, 
    0x80ff0002, 0x80e40003, 0x80e40004, 0x03000002, 0x800f0000, 0x80e40000, 
    0x80e40000, 0x03000005, 0x800f0000, 0x80e40001, 0x80e40000, 0x02000001, 
    0x800f0800, 0x80e40000, 0x0000ffff
};
//
// Generated by Microsoft (R) D3DX9 Shader Compiler
//
//   fxc /DMACROS=1 /Dmain=main /Emain /Tps_2_0 /nologo /Fhtmpshader.h
//    WorldVertexTransition_ps20.fxc
//
//
// Parameters:
//
//   sampler2D BaseSampler;
//   sampler2D BaseSampler2;
//   sampler2D LightmapAlphaSampler;
//   sampler2D LightmapSampler;
//   sampler2D MacrosSampler;
//
//
// Registers:
//
//   Name                 Reg   Size
//   -------------------- ----- ----
//   BaseSampler          s0       1
//   BaseSampler2         s1       1
//   LightmapSampler      s2       1
//   LightmapAlphaSampler s3       1
//   MacrosSampler        s4       1
//


static unsigned int pixelShader_WorldVertexTransition_ps20_1[] =
{
    0xffff0200, 0x0043fffe, 0x42415443, 0x0000001c, 0x000000e3, 0xffff0200, 
    0x00000005, 0x0000001c, 0x00000000, 0x000000dc, 0x00000080, 0x00000003, 
    0x00000001, 0x0000008c, 0x00000000, 0x0000009c, 0x00010003, 0x00000001, 
    0x0000008c, 0x00000000, 0x000000a9, 0x00030003, 0x00000001, 0x0000008c, 
    0x00000000, 0x000000be, 0x00020003, 0x00000001, 0x0000008c, 0x00000000, 
    0x000000ce, 0x00040003, 0x00000001, 0x0000008c, 0x00000000, 0x65736142, 
    0x706d6153, 0x0072656c, 0x000c0004, 0x00010001, 0x00000001, 0x00000000, 
    0x65736142, 0x706d6153, 0x3272656c, 0x67694c00, 0x616d7468, 0x706c4170, 
    0x61536168, 0x656c706d, 0x694c0072, 0x6d746867, 0x61537061, 0x656c706d, 
    0x614d0072, 0x736f7263, 0x706d6153, 0x0072656c, 0x325f7370, 0x4d00305f, 
    0x6f726369, 0x74666f73, 0x29522820, 0x44334420, 0x53203958, 0x65646168, 
    0x6f432072, 0x6c69706d, 0xab007265, 0x05000051, 0xa00f0000, 0x3eaaaa3b, 
    0x00000000, 0x00000000, 0x00000000, 0x0200001f, 0x80000000, 0xb0030000, 
    0x0200001f, 0x80000000, 0xb0030001, 0x0200001f, 0x80000000, 0xb0030002, 
    0x0200001f, 0x80000000, 0xb0030003, 0x0200001f, 0x90000000, 0xa00f0800, 
    0x0200001f, 0x90000000, 0xa00f0801, 0x0200001f, 0x90000000, 0xa00f0802, 
    0x0200001f, 0x90000000, 0xa00f0803, 0x0200001f, 0x90000000, 0xa00f0804, 
    0x03000042, 0x800f0004, 0xb0e40000, 0xa0e40800, 0x03000042, 0x800f0005, 
    0xb0e40001, 0xa0e40801, 0x03000042, 0x800f0001, 0xb0e40002, 0xa0e40803, 
    0x03000042, 0x800f0000, 0xb0e40002, 0xa0e40802, 0x03000042, 0x800f0002, 
    0xb0e40003, 0xa0e40804, 0x03000008, 0x80080004, 0x80e40004, 0xa0000000, 
    0x03000008, 0x80080005, 0x80e40005, 0xa0000000, 0x04000012, 0x800f0003, 
    0x80ff0001, 0x80e40004, 0x80e40005, 0x03000002, 0x800f0000, 0x80e40000, 
    0x80e40000, 0x03000005, 0x800f0000, 0x80e40003, 0x80e40000, 0x04000012, 
    0x80080003, 0x80ff0001, 0x80aa0002, 0x80ff0002, 0x03000002, 0x80080001, 
    0x80ff0003, 0x80ff0003, 0x03000005, 0x80070000, 0x80e40000, 0x80ff0001, 
    0x02000001, 0x800f0800, 0x80e40000, 0x0000ffff
};
static PrecompiledShaderByteCode_t WorldVertexTransition_ps20_pixel_shaders[2] = 
{
	{ pixelShader_WorldVertexTransition_ps20_0, sizeof( pixelShader_WorldVertexTransition_ps20_0 ) },
	{ pixelShader_WorldVertexTransition_ps20_1, sizeof( pixelShader_WorldVertexTransition_ps20_1 ) },
};
struct WorldVertexTransition_ps20PixelShader_t : public PrecompiledShader_t
{
	WorldVertexTransition_ps20PixelShader_t()
	{
		m_nFlags = SHADER_CUSTOM_ENUMERATION;
		m_nCentroidMask = 0x4;
		m_pByteCode = WorldVertexTransition_ps20_pixel_shaders;
		m_nShaderCount = 2;
		m_pName = "WorldVertexTransition_ps20";
		m_nDynamicCombos = 1;
		GetShaderDLL()->InsertPrecompiledShader( PRECOMPILED_PIXEL_SHADER, this );
	}
};
static WorldVertexTransition_ps20PixelShader_t WorldVertexTransition_ps20_PixelShaderInstance;
#endif // DEFINE_SHADERS
